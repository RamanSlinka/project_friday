{"version":3,"sources":["n1-main/m1-ui/Header/Header.module.css","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.module.css","n1-main/m1-ui/common/c2-SuperButton/SuperButton.module.css","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.module.css","n1-main/m1-ui/Pages/LoginPage.tsx","n1-main/m1-ui/Pages/SignupPage.tsx","n1-main/m1-ui/Pages/ProfilePage.tsx","n1-main/m1-ui/Pages/NotFoundPage.tsx","n1-main/m1-ui/Pages/RestorePassPage.tsx","n1-main/m1-ui/Pages/NewPassPage.tsx","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.tsx","n1-main/m1-ui/common/c2-SuperButton/SuperButton.tsx","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.tsx","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.tsx","n1-main/m2-bll/redux/auth-reducer.ts","n1-main/m1-ui/Pages/TestPage.tsx","n1-main/m1-ui/Routes.tsx","n1-main/m1-ui/Header/Header.tsx","n1-main/App.tsx","reportWebVitals.ts","n1-main/m2-bll/redux/store.ts","index.tsx"],"names":["module","exports","LoginPage","SignupPage","Grid","container","justify","item","xs","FormControl","FormLabel","FormGroup","TextField","label","margin","type","Button","variant","color","ProfilePage","NotFoundPage","RestorePassPage","NewPassPage","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","checkmark","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","chosenOption","target","SuperRadio","name","onChangeCallback","radioInputStyle","initState","isLoggedIn","TestPage","useSelector","state","auth","dispatch","useDispatch","console","log","onClick","PATH","Routes","path","exact","render","to","Header","menu","content","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6ecd337.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Header_menu__3WimD\",\"content\":\"Header_content__3rWSn\",\"item\":\"Header_item__3ztlS\",\"a\":\"Header_a__NxdsZ\",\"waffel\":\"Header_waffel__2nzKC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3kCTO\",\"container\":\"SuperCheckbox_container__1TYHX\",\"checkmark\":\"SuperCheckbox_checkmark__2jdIl\",\"spanClassName\":\"SuperCheckbox_spanClassName__kB6ee\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1nIkE\",\"errorInput\":\"SuperInputText_errorInput__231f3\",\"error\":\"SuperInputText_error__3Wenf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__u8AZa\",\"red\":\"SuperButton_red__1oZ5G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"SuperRadio_column__1LRWu\",\"superSelectBlock\":\"SuperRadio_superSelectBlock__1XrCP\",\"superRadioBlock\":\"SuperRadio_superRadioBlock__3RW2E\",\"radioInputStyle\":\"SuperRadio_radioInputStyle__36ms8\"};","import React from 'react'\r\n\r\nconst LoginPage : React.FC = () => {\r\n    return (\r\n        <>\r\n            <h1>Login</h1>\r\n        </>\r\n    )\r\n}\r\nexport default LoginPage","import React from 'react'\r\nimport { FormControl,  FormGroup, FormLabel, TextField, Button, Grid} from '@material-ui/core'\r\n\r\nconst SignupPage: React.FC = () => {\r\n    return (\r\n\r\n        <Grid container justify=\"center\">\r\n            <h1>IT incubator</h1>\r\n\r\n            <Grid item xs={4}>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>Sign up </p>\r\n\r\n                    </FormLabel>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                        />\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                        />\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                        />\r\n\r\n\r\n                        <Button type={'reset'} variant={'contained'} color={'primary'}>Cancel</Button>\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Register</Button>\r\n\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n\r\n\r\n    )\r\n}\r\nexport default SignupPage","import React from 'react'\r\n\r\nconst ProfilePage : React.FC = () => {\r\n    return (\r\n        <>\r\n            <h1>Profile</h1>\r\n        </>\r\n    )\r\n}\r\nexport default ProfilePage\r\n","import React from 'react'\r\n\r\nconst NotFoundPage : React.FC = () => {\r\n    return (\r\n        <>\r\n            <h1>Not found page</h1>\r\n        </>\r\n    )\r\n}\r\nexport default NotFoundPage","import React from 'react'\r\n\r\nconst RestorePassPage : React.FC = () => {\r\n    return (\r\n        <>\r\n            <h1>Restore Password</h1>\r\n        </>\r\n    )\r\n}\r\nexport default RestorePassPage","import React from 'react'\r\n\r\nconst NewPassPage : React.FC = () => {\r\n    return (\r\n        <>\r\n            <h1>New Password</h1>\r\n        </>\r\n    )\r\n}\r\nexport default NewPassPage","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className,\r\n        spanClassName,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${error ? s.error : ''} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : ''} ${className ? className : ''} ${s.superInput}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red,\r\n        className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n    //const finalInputClassName = `${ error ? s.errorInput : ''} ${ className ? className : ''} ${s.superInput}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        onChange && onChange(e)\r\n\r\n    }\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.container}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            <span className={s.checkmark}></span>\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../c1-SuperInputText/SuperInputText'\r\n\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${restProps.spanClassName ? restProps.spanClassName : ''} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options.map((o: any, i) => (\r\n        <option key={i} value={o}>{o}</option>\r\n    )) : []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOption\r\n        const chosenOption = e.target.value\r\n        if (chosenOption) {\r\n            onChangeOption && onChangeOption(chosenOption)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <select value={restProps.value} onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperRadio.module.css'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // onChange, onChangeOption\r\n        const chosenOption = e.target.value\r\n        if (chosenOption) {\r\n            onChangeOption && onChangeOption(chosenOption)\r\n        }\r\n    }\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        // map options with key\r\n        <label key={name + '-' + i} className={s.radioInputStyle}>\r\n            <input\r\n                type={'radio'}\r\n                name={'superRadio'}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n                checked={value === o ? true : false}\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","\r\n\r\nconst initState = {\r\n    isLoggedIn : false\r\n};\r\n\r\nexport type InitialStateType  = typeof initState\r\n\r\nexport const authReducer = (state = initState, action: CombinedActionType): InitialStateType => { // fix any\r\n    switch (action.type) {\r\n        case \"IS-LOGGED-IN\": {\r\n            return {...state, isLoggedIn: action.value};\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport type LoggedInType = {\r\n    type : 'IS-LOGGED-IN'\r\n    value : boolean\r\n}\r\n\r\ntype CombinedActionType = LoggedInType\r\n\r\nexport const loggedInAC = (value : boolean): LoggedInType => ({ type : \"IS-LOGGED-IN\", value });\r\n\r\n","import React from 'react'\r\nimport SuperInputText from \"../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../common/c6-SuperRadio/SuperRadio\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\r\nimport {loggedInAC} from \"../../m2-bll/redux/auth-reducer\";\r\n\r\nconst TestPage: React.FC = () => {\r\n    const isLoggedIn = useSelector((state: AppStoreType) => (state.auth.isLoggedIn))\r\n    const dispatch = useDispatch();\r\n    const handleTestButton = () => {\r\n        dispatch(loggedInAC(!isLoggedIn))\r\n    }\r\n    console.log(isLoggedIn)\r\n    return (\r\n        <>\r\n            <h1>Test page</h1>\r\n            <p>Is Logged In : {isLoggedIn ? <span>True</span> : <span>False</span>}</p>\r\n            <SuperInputText/>\r\n            <br/>\r\n            <SuperButton onClick={handleTestButton}>Test button</SuperButton>\r\n            <div>\r\n                <SuperCheckbox>Some checkbox 1</SuperCheckbox>\r\n                <SuperCheckbox checked={true}>Some checkbox 1</SuperCheckbox>\r\n                <SuperCheckbox checked={false}>Some checkbox 2</SuperCheckbox>\r\n            </div>\r\n            <SuperEditableSpan></SuperEditableSpan>\r\n            <SuperSelect></SuperSelect>\r\n            <SuperRadio options={[\"options1\", \"options2\"]}></SuperRadio>\r\n        </>\r\n    )\r\n}\r\nexport default TestPage","import React from 'react'\r\nimport {Redirect, Switch, Route} from 'react-router-dom'\r\nimport LoginPage from './Pages/LoginPage'\r\nimport SignupPage from \"./Pages/SignupPage\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport NotFoundPage from \"./Pages/NotFoundPage\";\r\nimport RestorePassPage from \"./Pages/RestorePassPage\";\r\nimport NewPassPage from \"./Pages/NewPassPage\";\r\nimport TestPage from \"./Pages/TestPage\";\r\n\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    SIGNUP: '/signup',\r\n    PROFILE: '/profile',\r\n    NOTFOUND: '/404',\r\n    RESTORE_PASS: '/restore',\r\n    NEW_PASS: '/newpassword',\r\n    TEST_PAGE: '/test_page',\r\n    ALL_ROUTES : '*',\r\n}\r\n\r\nconst  Routes : React.FC = ()  => {\r\n\r\n    console.log('Routes App' )\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n\r\n                <Route path={PATH.LOGIN} exact render={() => <LoginPage/>}/>\r\n                <Route path={PATH.SIGNUP} exact render={() => <SignupPage/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <ProfilePage/>}/>\r\n                <Route path={PATH.NOTFOUND} render={() => <NotFoundPage/>}/>\r\n                <Route path={PATH.RESTORE_PASS} render={() => <RestorePassPage/>}/>\r\n                <Route path={PATH.NEW_PASS} render={() => <NewPassPage/>}/>\r\n                <Route path={PATH.TEST_PAGE} render={() => <TestPage/>}/>\r\n                <Route path={PATH.ALL_ROUTES} render={() => <TestPage/>}/>\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <LoginPage/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Header.module.css'\r\nimport {PATH} from \"../Routes\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n\r\n            <nav className={s.menu}>\r\n                <div className={s.content}>\r\n                    <NavLink\r\n                        to={PATH.LOGIN}\r\n                        className={s.item}\r\n                    >Login</NavLink>\r\n                    <NavLink\r\n                        to={PATH.SIGNUP}\r\n                        className={s.item}\r\n                    >Sign up</NavLink>\r\n                    <NavLink\r\n                        to={PATH.PROFILE}\r\n                        className={s.item}\r\n                    >Profile</NavLink>\r\n                    <NavLink\r\n                        to={PATH.RESTORE_PASS}\r\n                        className={s.item}\r\n                    >Restore Pass</NavLink>\r\n                    <NavLink\r\n                        to={PATH.NEW_PASS}\r\n                        className={s.item}\r\n                    >New Pass</NavLink>\r\n                    <NavLink\r\n                        to={PATH.TEST_PAGE}\r\n                        className={s.item}\r\n                    >Test Page</NavLink>\r\n                    {/*<div className={s.item + ' ' + s.waffel}>menu</div>*/}\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Routes from './m1-ui/Routes';\r\nimport Header from \"./m1-ui/Header/Header\";\r\n\r\n// my first commit\r\n\r\nfunction App() {\r\n    console.log('Render App' )\r\n  return (\r\n    <div className=\"App\">\r\n        <Header/>\r\n      <Routes/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport {authReducer} from \"./auth-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\n// window.store = store; // for dev\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './n1-main/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from './n1-main/m2-bll/redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n          <HashRouter>\r\n          {/*<BrowserRouter>*/}\r\n              <App />\r\n          {/*</BrowserRouter>*/}\r\n          </HashRouter>\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}