{"version":3,"sources":["n1-main/m3-dal/Api.tsx","n1-main/m2-bll/redux/app-reducer.ts","n1-main/m2-bll/redux/auth-reducer.ts","n1-main/m1-ui/Pages/LoginPage.tsx","n1-main/m1-ui/Pages/FilesOperations.tsx","n1-main/m1-ui/Pages/ProfilePage.tsx","n1-main/m2-bll/redux/pack-reducer.ts","n1-main/m1-ui/Pages/NotFoundPage.tsx","n1-main/m1-ui/common/icons/LoadingIcon.tsx","n1-main/m1-ui/common/c7-Progress/Loading.tsx","n1-main/m1-ui/Pages/RestorePassPage.tsx","n1-main/m1-ui/Pages/NewPassPage.tsx","n1-main/m1-ui/common/icons/MessageIcon.tsx","n1-main/m1-ui/Pages/RestorePassCheckEmailPage.tsx","n1-main/m1-ui/Pages/Pack/RangeSlider.tsx","n1-main/m1-ui/Pages/Pack/RangeButtons.tsx","n1-main/m1-ui/Pages/Pack/RangeShowCard.tsx","n1-main/m1-ui/common/c8-Table/DeckTableHeader.tsx","n1-main/m1-ui/common/c9-Modal/ModalForm.tsx","n1-main/m1-ui/common/c8-Table/DeckTableRow.tsx","n1-main/m1-ui/common/c8-Table/DeckTable.tsx","n1-main/m1-ui/Pages/Pack/Search.tsx","n1-main/m1-ui/Pages/Pack/Packs.tsx","n1-main/m1-ui/Pages/SignupPage.tsx","n1-main/m2-bll/redux/card-reducer.ts","n1-main/m1-ui/Pages/Cards/CardTableHeader.tsx","n1-main/m1-ui/Pages/Cards/CardTableRow.tsx","n1-main/m1-ui/Pages/Cards/CardTable.tsx","n1-main/m1-ui/Pages/Cards/SearchCard.tsx","n1-main/m1-ui/Pages/Cards/CardPage.tsx","n1-main/m1-ui/Pages/VideoPage/YoutubeVideo.tsx","n1-main/m1-ui/Pages/VideoPage/VideoPlayer.tsx","n1-main/m1-ui/Pages/VideoPage/MyVideo.tsx","n1-main/m1-ui/Pages/VideoPage/VideoRoutes.tsx","n1-main/m1-ui/Pages/VideoPage/VideoHeader.tsx","n1-main/m1-ui/Pages/VideoPage/Video.tsx","n1-main/m1-ui/Pages/ReadFiles.tsx","n1-main/m1-ui/Pages/Pack/LearnPage.tsx","n1-main/m1-ui/Pages/Pack/FlipPage.tsx","n1-main/m1-ui/Pages/TestPage.tsx","n1-main/m1-ui/Routes.tsx","n1-main/m1-ui/ErrorSnackbar/ErrorSnackbar.tsx","n1-main/m1-ui/Header/UnauthorizedHeader.tsx","n1-main/m1-ui/Header/Header.tsx","n1-main/m1-ui/Img/Preloader.gif","n1-main/App.tsx","reportWebVitals.ts","n1-main/m2-bll/redux/store.ts","n1-main/m1-ui/common/theme.ts","index.tsx","n1-main/m1-ui/Pages/Pack/styles.module.css"],"names":["instance","axios","create","baseURL","withCredentials","acsessAPI","email","password","rememberMe","post","delete","from","message","resetPasswordToken","pack","queryPackObject","get","id","params","packUpdateObject","put","queryCardsObject","newCardObject","cardUpdateObject","initState","errorMessage","appStatus","error","setMessageErrorAC","type","setAppStatusAC","value","setAppErrorAC","isLoggedIn","isFetching","isPassRequestSent","isPassChanged","_id","name","avatar","publicCardPacksCount","created","update","isAdmin","verified","loggedInAC","signupAC","setIsFetchingSignupAC","setPassRequestAC","profileAC","authMeTC","dispatch","then","res","data","catch","rej","response","console","log","useStyles","makeStyles","theme","createStyles","root","textAlign","padding","width","formTitle","marginBottom","formSubtitle","formDescription","formButtonBlock","margin","display","alignItems","displayStretch","textFieldArea","LoginPage","classes","useDispatch","useSelector","state","auth","isLoggedError","restoreSchema","Yup","shape","required","formik","useFormik","initialValues","remember","validationSchema","onSubmit","values","resetForm","to","Grid","container","justify","style","minHeight","item","Card","className","handleSubmit","Typography","variant","color","FormControl","FormGroup","TextField","label","getFieldProps","touched","errors","align","FormControlLabel","control","Checkbox","Button","onClick","formLinkTitle","marginTop","Link","component","NavLink","PATH","SIGNUP","divider","spacing","FilesOperations","size","buttonRef","useRef","useState","file","setFile","file64","setFileURL","current","click","borderRadius","src","lastModified","toFixed","ref","accept","multiple","onChange","e","newFile","target","files","FileReader","window","URL","createObjectURL","ACTIONS_TYPE","ProfilePage","userProfile","xs","ALL_ROUTES","NotFoundPage","LoadingIcon","xmlns","height","viewBox","fill","d","maxWidth","loadingTitle","loadingMessage","Loading","props","justifyContent","paddingTop","paddingBottom","RestorePassPage","app","success","status","request","RESTORE_PASS_CHECK_EMAIL","LOGIN","errorBlock","NewPassPage","showPassword","setShowPassword","token","useParams","min","matches","Input","placeholder","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","Visibility","VisibilityOff","MessageIcon","x1","x2","y1","y2","gradientUnits","offset","stopColor","stopOpacity","opacity","cx","cy","rx","ry","transform","formIcon","initialPackState","cardPacks","packName","max","isSortTypeAscending","sortField","user_id","page","pageCount","cardPacksTotalCount","setUserIdAC","SET_PACK_USER_ID","payload","setCardsPackAC","SET_CARDS_PACK","setPageCountAC","SET_PACK_PAGE_COUNT","setPageAC","SET_PACK_PAGE","setPackNameAC","SET_PACK_NAME","getAllPack","getState","sortPacks","getPackQueryObject","length","SET_PACK_TOTAL_COUNT","valuetext","RangeSlider","React","setValue","useEffect","setTO","setTimeout","SET_PACK_MIN","clearTimeout","SET_PACK_MAX","Slider","event","newValue","valueLabelDisplay","getAriaValueText","flexGrow","privateModeHeader","privateModeBlock","modeButton","paper","sliderCaption","RangeButtons","hint","setHint","ButtonGroup","RangeShowCard","gutterBottom","headCells","numeric","disablePadding","table","minWidth","visuallyHidden","border","clip","overflow","top","DeckTableHeader","onRequestSort","numSelected","rowCount","TableHead","TableRow","map","headCell","TableCell","sortDirection","TableSortLabel","active","direction","property","ModalForm","openStatus","handleCloseModal","modalActionCallback","modalTitle","modalText","actionButtonTitle","children","closeAfterAction","handleClose","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","tableRow","backgroundColor","palette","action","hover","DeckTableRow","deck","labelId","modalDeleteStatus","setModalDeleteStatus","modalEditStatus","setModalEditStatus","setPackName","handleDeletePack","deckId","packId","handleEditDeck","updateObjectFields","updatePackQueryObject","cardsPack","role","tabIndex","scope","CARDS","slice","cardsCount","moment","updated","format","user_name","fullWidth","LEARN","DeckTable","selected","Paper","TableContainer","Table","SET_PACK_SORT_TYPE","TableBody","index","TablePagination","rowsPerPageOptions","count","rowsPerPage","onPageChange","newPage","onRowsPerPageChange","parseInt","rootGrid","search","searchInputBlock","addDeckBlock","marginLeft","Search","setSearch","modalAddStatus","setModalAddStatus","handleAddPAck","addNewPackObject","newPackObject","onKeyUp","key","filterBlock","mainBlock","boxSizing","mainSearchBlock","mainSearchHeader","mainTableBlock","Pack","elevation","square","resetButton","flex","marginRight","submitButton","SignupPage","cfPassword","validate","test","initialCardState","cards","packUserId","cardsTotalCount","minGrade","maxGrade","SET_PAGE_COUNT","SET_PAGE","setCardsArrayAC","SET_CARDS_ARRAY","getAllCardsTS","searchFields","sortCards","card","cardsQueryObject","cardsPack_id","SET_CARDS_TOTAL_COUNT","setCardsTotalCountAC","SET_MIN_GRADE","setMinGradeAC","SET_MAX_GRADE","setMaxGradeAC","CardTableHeader","CardTableRow","question","setQuestion","answer","setAnswer","handleDeleteCard","cardId","err","deleteCardByIdTC","handleEditCard","cardUpdateCard","updatedCardFields","updatedCardQuery","updateCardTC","Rating","grade","readOnly","CardTable","SET_SORT_ASC","SET_SORT_FIELD","SearchCard","setModalCardStatus","handleAddCard","newCardFields","cardQuestion","CardPage","history","useHistory","packObjectFromState","find","getObjectName","push","PACK","ArrowBackIos","YoutubeVideo","frameBorder","allow","allowFullScreen","Video","fileURL","videoRef","duration","setDuration","controls","setControls","currentTime","setCurrentTime","setInterval","play","flexFlow","checked","currentTarget","pause","requestFullscreen","volume","playbackRate","VideoPage","VideoPlayer","FilesRoutes","path","exact","render","MyVideo","listBlock","flexDirection","iconBlock","menuItem","VideoHeader","AppBar","Toolbar","App","VideoRoutes","flexWrap","paper1","paper2","ReadFiles","setFile64","existFile","reader","onloadend","result","readAsText","fileName","link","document","createElement","href","download","body","appendChild","removeChild","writeFile","cursor","willChange","front","backgroundSize","back","buttonBlock","LearnPage","flipped","setFlipped","cardToLearn","handleFlip","alert","useSpring","config","mass","tension","friction","styles","div","c","o","rotateX","FlipPage","set","TestPage","PROFILE","NOTFOUND","RESTORE_PASS","NEW_PASS","TEST_PAGE","VIDEO_PAGE","FILES","VIDEO","READ_FILES","WRITE_FILES","Routes","RestorePassCheckEmailPage","Alert","ErrorSnackbar","reason","isOpen","Snackbar","autoHideDuration","severity","UnauthorizedHeader","itemMenu","Menu","LinearProgress","Header","preload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","muiTheme","createTheme","overrides","MuiCssBaseline","background","backgroundRepeat","backgroundAttachment","MuiButton","fontSize","fontFamily","fontWeight","fontStyle","lineHeight","textTransform","MuiCard","MuiLink","MuiTextField","MuiInput","typography","h1","h2","h3","body1","join","primary","light","main","dark","secondary","warning","info","text","ReactDOM","StrictMode","CssBaseline","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c0db13a8.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst settings = {\n    withCredentials: true\n};\nconst instance = axios.create({\n    baseURL: 'http://localhost:7542/2.0/',\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\n    ...settings\n})\n\n// Types for delete card object\n\nexport interface DeleteCardResponseType {\n    deletedCard: UpdateCardType\n    token: string\n    tokenDeathTime: number\n}\n\n// Types for post card object\nexport interface PostCardResponseType {\n    newCard: CardType\n    token: string\n    tokenDeathTime: number\n}\n\n// Types for Update Card Request\nexport interface UpdateCardType extends CardType {\n    answerImg: string\n    answerVideo: string\n    questionImg: string\n    questionVideo: string\n}\n\n// Types for Update Card Request\nexport interface UpdateCardResponseType {\n    updatedCard: UpdateCardType\n    token: string\n    tokenDeathTime: number\n}\n\n// Types for Update card request\n\n// Update Card Fields\nexport interface UpdateCardFieldsType {\n    _id?: string\n    question?: string\n    answer?: string\n    comments?: string\n    grade?: number\n    shots?: number\n    type?: string\n    /*more_id? : \"6101043d9906843f45c0f27f\",*/\n    __v?: 0,\n    answerImg?: string\n    answerVideo?: string\n    questionImg?: string\n    questionVideo?: string\n}\n\nexport interface UpdateCardQueryType {\n    card: UpdateCardFieldsType\n}\n\n// Types for post card object\n\nexport interface PostCardFieldsType {\n    cardsPack_id?: string\n    question?: string\n    answer?: string\n    grade?: 0 | 1 | 3 | 4 | 5\n    shots?: number\n    rating?: number\n    answerImg?: string\n    questionImg?: string\n    questionVideo?: string\n    answerVideo?: string\n    type?: string\n}\n\nexport interface PostCardQueryType {\n    card: PostCardFieldsType\n}\n\n// Get Card Query Fields\nexport interface GetCardQueryFields {\n    cardsPack_id?: string\n    cardAnswer?: string | null\n    cardQuestion?: string | null\n    min?: number | null\n    max?: number | null\n    sortCards?: string | null\n    page?: number | null\n    pageCount?: number | null\n}\n\n// Types for Get Card Query\nexport interface GetCardQueryType {\n    params: GetCardQueryFields\n}\n\n// Types for Get Card Query\nexport interface CardType {\n    _id: string\n    cardsPack_id: string\n    user_id: string\n    answer: string\n    question: string\n    grade: number\n    shots: number\n    comments: string\n    type: string\n    rating: number\n    more_id: string\n    created: string\n    updated: string\n    __v: number\n}\n\n// Types for Get Card Query\nexport interface GetCardResponseType {\n    cards: Array<CardType>\n    packUserId: string\n    page: number\n    pageCount: number\n    cardsTotalCount: number\n    minGrade: number\n    maxGrade: number\n    token: string\n    tokenDeathTime: number\n}\n\nexport type UserProfileType = {\n    _id: string;\n    email: string,\n    name: string,\n    avatar?: string,\n    publicCardPacksCount: number,\n    created: string,\n    update: string,\n    isAdmin: boolean,\n    verified: boolean,\n    rememberMe: boolean,\n    error: string,\n    isLoggedIn:boolean,\n    isFetching:boolean\n}\n\nexport type UserLoginType = {\n    _id: string;\n    email: string,\n    name: string,\n    avatar?: string,\n    publicCardPacksCount: number\n}\n\ntype registrationUserType = {\n    addedUser: {}\n    error?: string\n}\n\nexport type UserForgotPassType = {\n    info: string\n    success: boolean\n    answer: boolean\n    html: boolean\n}\nexport type UserNewPasswordType = {\n    info: string\n}\n\nexport interface PackResponseDataType {\n    _id: string\n    user_id: string\n    user_name: string\n    private: boolean\n    name: string\n    path: string\n    grade: number\n    shots: number\n    cardsCount: number\n    type: string\n    rating: number\n    created: string\n    updated: string\n    more_id: string\n    __v: number\n}\n\nexport interface PackDataType extends Omit<PackResponseDataType, 'created' | 'updated'> {\n    created: Date\n    updated: Date\n}\n\nexport interface GetPackResponseType {\n    cardPacks: Array<PackResponseDataType>\n    page: number\n    pageCount: number\n    cardPacksTotalCount: number\n    minCardsCount: number\n    maxCardsCount: number\n    token: string\n    tokenDeathTime: number\n}\n\nexport interface GetPackResponseWithDateType extends Omit<GetPackResponseType, 'cardPacks'> {\n    cardPacks: Array<PackDataType>\n}\n\nexport interface DeletePackResponseType {\n    deletedCardsPack: PackResponseDataType\n    token: string\n    tokenDeathTime: number\n}\n\nexport type NewPackResponseType = {\n    newCardsPack: PackResponseDataType,\n    token: string\n    tokenDeathTime: number\n}\n\nexport interface PackUpdateResponseDataType extends PackResponseDataType {\n    deckCover: string\n}\n\nexport interface UpdatePackResponseType {\n    updatedCardsPack: PackUpdateResponseDataType,\n    token: string\n    tokenDeathTime: number\n}\n\nexport interface NewPackFieldsType {\n    name?: string\n    path?: string\n    grade?: number\n    shots?: number\n    rating?: number\n    deckCover?: string\n    privateDeck?: boolean\n    type?: string\n}\n\nexport interface NewPackObjectDataType {\n    cardsPack: NewPackFieldsType\n}\n\nexport interface GetPackQueryParamsType {\n    params?: {\n        packName?: string | null\n        min?: number | null\n        max?: number | null\n        sortPacks?: string | null\n        page?: number | null\n        pageCount?: number | null\n        user_id?: string | null\n    }\n}\n\n export interface PackUpdateFieldsType {\n     _id?: string\n     name?: string\n     path?: string\n     grade?: number\n     shots?: number\n     rating?: number\n     deckCover?: string\n     private?: boolean\n     type?: string\n }\n\nexport interface PackUpdateObjectType {\n    cardsPack: PackUpdateFieldsType\n}\n\nexport const acsessAPI = {\n    loginUser(email: string, password: string, rememberMe: boolean) {\n        return instance.post<UserProfileType>(\"/auth/login\", {email, password, rememberMe});\n\n    },\n    logoutUser() {\n        return instance.delete<UserProfileType>(\"/auth/login\",);\n\n    },\n    registrationUser(email: string, password: string) {\n        return instance.post<registrationUserType>(\"/auth/register\", {email, password})\n\n    },\n    forgotPassword(email: string, from: string, message: string) {\n        return instance.post<UserForgotPassType>(\"/auth/forgot\", {email, from, message});\n    },\n    setNewPassword(password: string, resetPasswordToken: string) {\n        return instance.post<UserNewPasswordType>(\"/auth/set-new-password\", {password, resetPasswordToken});\n    },\n    authUser() {\n        return instance.post<any>(\"/auth/me\", {});\n    },\n\n    postCardPacks(pack: NewPackObjectDataType) {\n        return instance.post<NewPackResponseType>(\"/cards/pack\", pack);\n    },\n    getCardPacks(queryPackObject: GetPackQueryParamsType) {\n        return instance.get<GetPackResponseType>(\"/cards/pack\", queryPackObject);\n    },\n    deleteCardsPacks(id: string) {\n        return instance.delete<DeletePackResponseType>(\"/cards/pack\", {params: {id}});\n    },\n    updateCardPacks(packUpdateObject: PackUpdateObjectType) {\n        return instance.put<PackUpdateResponseDataType>(\"/cards/pack\", packUpdateObject);\n    },\n    // API for cards\n    getAllCards(queryCardsObject: GetCardQueryType) {\n        return instance.get<GetCardResponseType>(\"/cards/card\", queryCardsObject);\n    },\n    postCard(newCardObject: PostCardQueryType) {\n        return instance.post<PostCardResponseType>(\"/cards/card\", newCardObject);\n    },\n    updateCardById(cardUpdateObject: UpdateCardQueryType) {\n        return instance.put<UpdateCardResponseType>(\"/cards/card\", cardUpdateObject);\n    },\n    deleteCardByID(id: string) {\n        return instance.delete<DeleteCardResponseType>(\"/cards/card\", {params: {id}});\n    },\n}\n\n\n\n\n\n\n\n","type InitStateType = {\n    errorMessage: string | null\n    appStatus: AppStatusType\n    error: string | null\n};\n\nconst initState: InitStateType = {\n    errorMessage: null,\n    appStatus: 'idle',\n    error: null\n};\nexport type AppStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\nexport type CombinedActionType = SetMessageErrorActionType\n    | SetAppStatusType\n    | SetAppErrorActionType\n\nexport const appReducer = (state = initState, action: CombinedActionType): InitStateType => {\n    switch (action.type) {\n        case \"APP/SET-ERROR-MESSAGE\": {\n            return {...state, errorMessage: action.errorMessage}\n        }\n        case \"APP/SET-APP-STATUS\" : {\n            return {...state, appStatus: action.value}\n        }\n        case 'APP/SET-ERROR':\n            return {...state, error: action.error}\n        default:\n            return state;\n    }\n};\n\n\nexport const setMessageErrorAC = (errorMessage: string) => ({type: \"APP/SET-ERROR-MESSAGE\", errorMessage} as const)\nexport const setAppStatusAC = (value: AppStatusType) => ({type: \"APP/SET-APP-STATUS\", value} as const);\nexport const setAppErrorAC = (error: string | null) => ({type: 'APP/SET-ERROR', error} as const)\n\n\nexport type SetMessageErrorActionType = ReturnType<typeof setMessageErrorAC>\nexport type SetAppStatusType = ReturnType<typeof setAppStatusAC>\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>","import {acsessAPI, UserProfileType} from \"../../m3-dal/Api\";\nimport {Dispatch} from 'redux';\nimport {setAppErrorAC, setAppStatusAC, setMessageErrorAC} from \"./app-reducer\";\n\n\nexport type InitStateType = typeof initState;\n\nconst initState = {\n    isLoggedIn: false,\n    error: \"\",\n    email: \"\",\n    password: \"\",\n    isFetching: true,\n    isPassRequestSent: false,\n    isPassChanged: false,\n    _id: \"\",\n    name: \"\",\n    avatar: \"\",\n    publicCardPacksCount: 0,\n    created: \"\",\n    update: \"\",\n    isAdmin: false,\n    verified: false,\n    rememberMe: false,\n};\n\nexport const authReducer = (state: InitStateType = initState, action: CombinedActionType): InitStateType => {\n    switch (action.type) {\n        case \"IS-LOGGED-IN\": {\n            return {...state, isLoggedIn: action.value, error: action.error};\n        }\n        case \"SIGN_UP\":\n            return {\n                ...state,\n                email: action.email,\n                password: action.password,\n                error: action.message as string,\n            };\n        case \"IS_FETCHING\":\n            return {\n                ...state, isFetching: action.isFetching\n            }\n        case \"RESTORE/SET-PASS-REQUEST\" : {\n            return {...state, isPassRequestSent: action.value}\n        }\n        case \"RESTORE/SET-PASS-CHANGED\" : {\n            return {...state, isPassChanged: action.value}\n        }\n        case \"ADD-PROFILE\": {\n            return {...state, ...action.value};\n        }\n        default:\n            return state;\n    }\n};\n\ntype CombinedActionType = LoggedInType\n    | SignupActionType\n    | SetIsFetchingSignupActionType\n    | SetPassRequestType\n    | SetPassChangedType\n    | profileACType;\n\nexport type LoggedInType = ReturnType<typeof loggedInAC>;\nexport type SignupActionType = ReturnType<typeof signupAC>;\nexport type SetIsFetchingSignupActionType = ReturnType<typeof setIsFetchingSignupAC>;\nexport type SetPassRequestType = ReturnType<typeof setPassRequestAC>\nexport type SetPassChangedType = ReturnType<typeof setPassChangedAC>\nexport type profileACType = ReturnType<typeof profileAC>\n\nexport const loggedInAC = (value: boolean, error: string) =>\n    ({type: \"IS-LOGGED-IN\", value, error} as const);\n\nexport const signupAC = (email: string, password: string, message?: string) =>\n    ({type: 'SIGN_UP', email, password, message} as const);\n\nexport const setIsFetchingSignupAC = (isFetching: boolean) =>\n    ({type: 'IS_FETCHING', isFetching} as const);\n\nexport const setPassRequestAC = (value: boolean) => ({type: \"RESTORE/SET-PASS-REQUEST\", value} as const);\nexport const setPassChangedAC = (value: boolean) => ({type: \"RESTORE/SET-PASS-CHANGED\", value} as const);\n\nexport const profileAC = (value: UserProfileType) => ({type: \"ADD-PROFILE\", value} as const);\n\n// thunks-------------------------------------------------------------------\n\nexport const loggedInTC = (email: string, password: string, rememberMe: boolean) => {\n    return (dispatch: Dispatch) => {\n        acsessAPI.loginUser(email, password, rememberMe)\n            .then((res) => {\n                dispatch(profileAC(res.data))\n                dispatch(loggedInAC(true, \"\"))\n            })\n            .catch(rej => {\n                //    if has response and has data\n                if (rej.response?.data) {\n                    dispatch(loggedInAC(false, rej.response.data.error))\n                } else {\n                    dispatch(loggedInAC(false, \"network error\"))\n                }\n            })\n    }\n}\n\nexport const logoutTC = () => (dispatch: Dispatch<CombinedActionType>) => {\n    acsessAPI.logoutUser()\n        .then(res => {\n            //  dispatch(profileAC(res.data))\n            dispatch(loggedInAC(false, \"\"))\n        }).catch((rej) => {\n        // if (rej.response.data){\n        // console.log(rej.response.data.error)\n        dispatch(loggedInAC(false, rej.response.data.error))\n    })\n}\n\n\nexport const authMeTC = () => {\n    return (dispatch: Dispatch<CombinedActionType>) => {\n        acsessAPI.authUser()\n            .then((res) => {\n                dispatch(profileAC(res.data))\n                dispatch(loggedInAC(true, \"\"))\n                dispatch(setIsFetchingSignupAC(false))\n            }).catch(rej => {\n                       dispatch(loggedInAC(false, \"\"))\n                       dispatch(setIsFetchingSignupAC(false))\n            const error = rej.response\n                ? rej.response.data.error\n                : (rej.message + ', more details in the console');\n            console.log(error)\n        })\n    }\n}\n\nexport const registrationThunk = (email: string, password: string) => {\n    return (dispatch: Dispatch) => {\n        acsessAPI.registrationUser(email, password)\n            .then(() => {\n                dispatch(signupAC(email, password));\n                dispatch(setIsFetchingSignupAC(true));\n            })\n            .catch(error => {\n                dispatch(setAppErrorAC(error.message))\n                dispatch(setAppStatusAC('failed'))\n                const message = error.response.data.error\n                dispatch(signupAC(email, password, message))\n                //  dispatch(setAppErrorAC(error.message))\n                //   dispatch(setAppStatusAC(\"failed\"))\n            })\n    }\n}\n\nexport const setNewPasswordTC = (password: string, resetPasswordToken: string) => {\n    return (dispatch: Dispatch<any>) => {\n        dispatch(setAppStatusAC('loading'))\n        acsessAPI.setNewPassword(password, resetPasswordToken)\n            .then((res) => {\n                if (res.status === 200) {\n                    dispatch(setPassChangedAC(true))\n                    dispatch(setAppStatusAC('succeeded'))\n                }\n            })\n            .catch(error => {\n                dispatch(setAppErrorAC(error.message))\n                dispatch(setAppStatusAC('failed'))\n                if (error.response && error.response.status) {\n                    if (error.response?.data?.error) {\n                        dispatch(setMessageErrorAC(error.response.data.error))\n                    } else {\n                        dispatch(setMessageErrorAC('Something went wrong'))\n                    }\n                } else {\n                    dispatch(setMessageErrorAC('Something went wrong'))\n                }\n            })\n    }\n}\n\n\nexport const forgotPassTC = (email: string) => {\n    return (dispatch: Dispatch<any>) => {\n        dispatch(setAppStatusAC('loading'))\n        const from = \"santari33@gmail.com\";\n        const message = \"<div>password recovery link: <a href='https://maunonen.github.io/it-incubator-ignat-project/#/set-new-password/$token$'>link</a></div>\";\n\n        acsessAPI.forgotPassword(email, from, message)\n            .then((res) => {\n                console.log('Thunk', res)\n                if (res.data.success) {\n                    dispatch(setPassRequestAC(true))\n                    dispatch(setAppStatusAC('succeeded'))\n                }\n            })\n            .catch(error => {\n                dispatch(setAppErrorAC(error.message))\n                dispatch(setAppStatusAC('failed'))\n                if (error.response && error.response.status) {\n                    dispatch(setMessageErrorAC(error.response.data.error))\n                    dispatch(setPassRequestAC(false))\n                    /*if (error.response.status === 404) {\n                        // Request made and server responded\n                        /!*console.log(error.response.data);\n                        console.log(error.response.status);\n                        console.log(error.response.headers);*!/\n                        dispatch(setMessageErrorAC(error.response.data.error))\n                        dispatch(setPassRestoredAC(false))\n\n                    } else if (error.response.status === 400) {\n                        dispatch(setMessageErrorAC(error.response.data.error))\n                        dispatch(setPassRestoredAC(false))\n                    } else if (error.response.status === 500) {\n                        dispatch(setMessageErrorAC(error.response.data.error))\n                        dispatch(setPassRestoredAC(false))\n                    }*/\n                } else {\n                    dispatch(setMessageErrorAC(\"Something went wrong\"))\n                    dispatch(setPassRequestAC(false))\n                    if (error.request) {\n                        // The request was made but no response was received\n                        console.log(error.request);\n                    } else {\n                        // Something happened in setting up the request that triggered an Error\n                        console.log('Error', error.message);\n                    }\n                }\n            })\n    }\n}\n","import React from 'react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {useFormik} from \"formik\";\nimport * as Yup from 'yup';\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {\n    Button, Card, createStyles, FormControl, FormGroup, Checkbox,\n    Grid, makeStyles, TextField, Theme, Typography, FormControlLabel, Link\n} from \"@material-ui/core\";\nimport {loggedInTC} from \"../../m2-bll/redux/auth-reducer\";\nimport {PATH} from \"../Routes\";\nimport {useHistory} from \"react-router-dom\";\n\n\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        textAlign: \"center\",\n        padding: \"30px 30px\",\n        width: \"413px\",\n    },\n    formTitle: {\n        marginBottom: \"30px\",\n    },\n    formSubtitle: {\n        marginBottom: \"40px\",\n    },\n    formDescription: {\n        marginBottom: \"40px\",\n    },\n    formButtonBlock: {\n        margin: \"0px 35px\",\n        display: \"flex\",\n        alignItems: \"\",\n    },\n    displayStretch: {\n        display: \"flex\",\n        alignItems: \"stretch\"\n    },\n    textFieldArea: {\n        margin: \"0px 10px\"\n    },\n}))\n\nconst LoginPage: React.FC = () => {\n\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const isLoggedIn = useSelector((state: AppStoreType) => state.auth.isLoggedIn)\n    const isLoggedError = useSelector((state: AppStoreType) => state.auth.error)\n\n    const restoreSchema = Yup.object().shape({\n        email: Yup.string().email('Invalid email').required('Required'),\n    });\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            // nya-admin@nya.nya\n            password: '',\n            // 1qazxcvBG\n            remember: false\n        },\n        validationSchema: restoreSchema,\n        onSubmit: values => {\n            dispatch(loggedInTC(values.email, values.password, values.remember))\n            formik.resetForm()\n        },\n    })\n\n    /*const history = useHistory();*/\n\n    if (isLoggedIn) {\n        return <Redirect to={'/'}/>\n    }\n\n    return <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{minHeight: '100vh'}}\n    >\n        <Grid item>\n            <Card className={classes.root}>\n                <form onSubmit={formik.handleSubmit}>\n                    <Typography\n                        variant={\"h1\"}\n                        className={classes.formTitle}\n                    >It-Incubator\n                    </Typography>\n                    <Typography\n                        variant={\"h2\"}\n                        className={classes.formSubtitle}\n                    >Signin</Typography>\n                    <div style={{color: \"red\"}}>{isLoggedError}</div>\n                    <FormControl className={classes.displayStretch}>\n                        <FormGroup className={classes.textFieldArea}>\n                            <TextField\n                                type=\"email\"\n                                label=\"Email\"\n                                margin=\"dense\"\n                                {...formik.getFieldProps('email')}\n                            />\n                            { formik.touched.email && formik.errors.email &&\n                            <div style={{color: 'red'}}>{formik.errors.email}</div>\n                            }\n                            <TextField\n                                type=\"password\"\n                                label=\"password\"\n                                margin=\"dense\"\n                                {...formik.getFieldProps('password')}\n                            />\n                            {formik.touched.password && formik.errors.password &&\n                            <div style={{color: 'red'}}>{formik.errors.password}</div>\n                            }\n                            <Typography\n                                variant={\"body1\"}\n                                className={classes.formDescription}\n                                align={\"left\"}\n                            >Enter your email address and password\n                            </Typography>\n\n\n                            <FormControlLabel\n                                label={'Remember me'}\n                                control={<Checkbox/>}\n                                // onChange={changeRememberCheckboxHandler}\n                                {...formik.getFieldProps('remember')}\n                            />\n\n                            <div className={classes.formButtonBlock}>\n                            <Button\n                                type={'reset'}\n                                onClick={() => {formik.resetForm()}}\n                                variant={'contained'}\n                                className={classes.formButtonBlock}\n                                color={'primary'}>\n                                Reset\n                            </Button>\n                            <Button\n                                type={'submit'}\n                                variant={'contained'}\n                                className={classes.formButtonBlock}\n                                color={'primary'}>\n                                Login\n                            </Button>\n                            </div>\n\n                            <Typography\n                                variant={\"body1\"}\n                                className={classes.formLinkTitle}\n                                style={{ marginTop : \"30px\", marginBottom : \"15px\"}}\n                            >Don't have an account</Typography>\n                            <Link\n                                component={NavLink}\n                                to={PATH.SIGNUP}\n                                color={\"textPrimary\"}\n                            >Sign up\n                            </Link>\n                        </FormGroup>\n                    </FormControl>\n                </form>\n            </Card>\n        </Grid>\n    </Grid>\n}\nexport default LoginPage\n","\nimport React, {ChangeEvent, useRef} from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport {Button } from '@material-ui/core/';\nimport { useState } from 'react';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        divider: {\n            margin: theme.spacing(2, 0),\n        },\n    }),\n);\n\nexport default function FilesOperations() {\n\n        const buttonRef=useRef<HTMLInputElement>(null)\n\n        const [file,setFile]=useState<any>()\n        const [file64,setFileURL]=useState<any>({})\n\n\n        const upLoad=(e:ChangeEvent<HTMLInputElement>)=>{\n            const newFile= e.target.files && e.target.files[0]\n\n            const reader = new FileReader()\n\n            if (newFile){setFile(newFile)\n                setFileURL(window.URL.createObjectURL(newFile))\n            }\n        }\n\n    const returnFileSize=(size:number)=>{\n      if(size<1024){return size + \"bytes\"}\n      else if (size>1024 && size < 1048576){return (size/1024).toFixed(2) + \"Kb\"}\n      else if (size > 1048576){return (size/1048576).toFixed(2) + \"Mb\"}\n    }\n\n\n    return (\n        <div>\n             <h1>Upload avatar</h1> <br/>\n\n            <Button\n                    type={'reset'}\n                    onClick={() => buttonRef && buttonRef.current && buttonRef.current.click() }\n                    variant={'contained'}\n                    color={'primary'}>\n                    Upload\n            </Button>\n\n            { file &&\n             <div>\n                 <br/>\n                <div>\n                    <img style={{width: 150, borderRadius: 20}} src={file64}/>\n                </div>\n                <div><h3>File info:</h3></div>\n                <div>name: {file && file.name}</div>\n                <div>lastModified: {file && file.lastModified}</div>\n                <div>size: {file && returnFileSize(file.size)}</div>\n                <div>type: {file && file.type}</div>\n             </div>\n             }\n\n                <div>\n                    <input type=\"file\"\n                    ref={buttonRef}\n                    accept=\".jpg,.jpeg,.png\"\n                    multiple\n                    onChange={upLoad}\n                    style={{display:\"none\"}}\n                    />\n                </div>\n\n        </div>\n    );\n}\n","import React, {useEffect} from 'react'\nimport {Grid} from '@material-ui/core'\nimport { useSelector} from 'react-redux';\nimport FilesOperations from './FilesOperations';\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {Redirect} from \"react-router-dom\";\nimport {PATH} from \"../Routes\";\nimport {UserProfileType} from '../../m3-dal/Api';\n\n\n\nexport const ProfilePage: React.FC = () => {\n\n\n    const userProfile = useSelector<AppStoreType, UserProfileType>(state => state.auth)\n\n\n    if (userProfile._id) {\n        return (\n            <Grid container justify=\"center\">\n                <Grid item xs={5}>\n                    <h1>User profile</h1>\n                    <h3>Id {userProfile._id}</h3>\n                    <h3>Email {userProfile.email}</h3>\n                    <h3>Name {userProfile.name}</h3>\n                    <h3>Avatar <img src={userProfile.avatar} style={{width: 100}}/></h3>\n                    <h3>PublicCardPacksCount= {userProfile.publicCardPacksCount}</h3>\n                    <h3>created {userProfile.created}</h3>\n                </Grid>\n                <FilesOperations/>\n            </Grid>\n        )\n    } else {\n        return (\n            <Redirect from={PATH.ALL_ROUTES} to=\"/login\"/>\n        )\n    }\n}\n\nexport default ProfilePage\n\n\n","import {\n    acsessAPI,\n    GetPackQueryParamsType,\n    GetPackResponseWithDateType, NewPackFieldsType, NewPackObjectDataType,\n    PackDataType,\n    PackResponseDataType, PackUpdateFieldsType, PackUpdateObjectType\n} from \"../../m3-dal/Api\";\nimport {setAppErrorAC, setAppStatusAC, setMessageErrorAC} from \"./app-reducer\";\nimport {AnyAction, Dispatch} from \"redux\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {AppStoreType} from \"./store\";\n\n\nexport enum ACTIONS_TYPE {\n    SET_CARDS_PACK = 'PackReducer/SET_CARDS_PACK',\n    SET_PACK_NAME = 'PackReducer/SET_PACK_NAME',\n    SET_PACK_MIN = 'PackReducer/SET_PACK_MIN',\n    SET_PACK_MAX = 'PackReducer/SET_PACK_MAX',\n    SET_PACK_PAGE = 'PackReducer/SET_PACK_PAGE',\n    SET_PACK_PAGE_COUNT = 'PackReducer/SET_PACK_PAGE_COUNT',\n    SET_PACK_TOTAL_COUNT = 'PackReducer/SET_PACK_TOTAL_COUNT',\n    SET_PACK_USER_ID = 'PackReducer/SET_PACK_USER_ID',\n    SET_PACK_SORT_TYPE = 'PackReducer/SET_PACK_SORT_TYPE',\n    SET_PACK_SORT_FIELD = 'PackReducer/SET_PACK_SORT_FIELD',\n    ADD_NEW_PACK = 'PackReducer/ADD_NEW_PACK',\n    GET_PACKS = 'PackReducer/GET_PACKS',\n}\n\nexport interface InitialPackStateType {\n    cardPacks: Array<PackResponseDataType>,\n    /*Query params*/\n    packName: string | null\n    // minCardsCount\n    min: number | null\n    // maxCardsCount\n    max: number | null\n    // sort params\n    //sortPacks: string\n    isSortTypeAscending: boolean\n    sortField: keyof PackDataType | null\n    page: number\n    pageCount: number\n    user_id: string | null\n    /* getting from server */\n    cardPacksTotalCount: number\n    /*minCardsCount: number | null\n    maxCardsCount: number | null*/\n}\n\nconst initialPackState: InitialPackStateType = {\n    cardPacks: [],\n    packName: null,\n    // minCardsCount, maxCardsCount\n    min: null,\n    max: null,\n    isSortTypeAscending: false,\n    sortField: \"updated\",\n    user_id: null,\n    // current page\n    page: 0,\n    // packs per page\n    pageCount: 5,\n    // packs total count\n    cardPacksTotalCount: 0,\n}\n\n\nexport const packReducer = (state: InitialPackStateType = initialPackState, action: CombinedActionType): InitialPackStateType => {\n    /*console.log('action type', action.type)*/\n    /*console.log('action payload', action.payload)*/\n    switch (action.type) {\n\n        case ACTIONS_TYPE.SET_CARDS_PACK:\n            /*debugger*/\n            return {\n                ...state,\n                cardPacks: [],\n                ...action.payload,\n            }\n        case ACTIONS_TYPE.SET_PACK_NAME:\n        case ACTIONS_TYPE.SET_PACK_MAX:\n        case ACTIONS_TYPE.SET_PACK_MIN:\n        case ACTIONS_TYPE.SET_PACK_PAGE:\n        case ACTIONS_TYPE.SET_PACK_PAGE_COUNT:\n        case ACTIONS_TYPE.SET_PACK_USER_ID:\n        case ACTIONS_TYPE.SET_PACK_SORT_TYPE:\n        case ACTIONS_TYPE.SET_PACK_TOTAL_COUNT:\n\n            return {\n\n                ...state,\n                ...action.payload,\n            }\n        default:\n            return state;\n    }\n};\n\nexport const setUserIdAC = (user_id: string) => ({\n    type: ACTIONS_TYPE.SET_PACK_USER_ID,\n    payload: {\n        user_id\n    }\n})\n\nexport const setPackSortType = (isSortTypeAscending: boolean, sortField: keyof PackDataType) => ({\n    type: ACTIONS_TYPE.SET_PACK_SORT_TYPE,\n    payload: {\n        isSortTypeAscending, sortField\n    }\n})\n\nexport const setCardsPackTotalCountAC = (cardPacksTotalCount: number) => ({\n    type: ACTIONS_TYPE.SET_PACK_TOTAL_COUNT,\n    payload: {\n        cardPacksTotalCount\n    }\n})\n\nexport const setCardsPackAC = (cardPacks: Array<PackResponseDataType>) => ({\n    type: ACTIONS_TYPE.SET_CARDS_PACK,\n    payload: {\n        cardPacks\n    }\n} as const)\n\nexport const setPageCountAC = (pageCount: number) => ({\n    type: ACTIONS_TYPE.SET_PACK_PAGE_COUNT,\n    payload: {\n        pageCount\n    }\n})\n\nexport const setPageAC = (page: number) => ({\n    type: ACTIONS_TYPE.SET_PACK_PAGE,\n    payload: {\n        page\n    }\n})\nexport const setMaxCardsCountAC = (max: number) => ({\n    type: ACTIONS_TYPE.SET_PACK_MAX,\n    payload: {\n        max\n    }\n})\nexport const setMinCardsCountAC = (min: number) => ({\n    type: ACTIONS_TYPE.SET_PACK_MIN,\n    payload: {\n        min\n    }\n})\nexport const setPackNameAC = (packName: string | null) => ({\n    type: ACTIONS_TYPE.SET_PACK_NAME,\n    payload: {\n        packName\n    }\n})\n\nexport type CombinedActionType =\n    SetPackNameActionType | SetMinCardsCountType |\n    SetMaxCardsCountType | SetUserIdType |\n    SetPageCountType | SetPageType | SetCardsPackType |\n    SetPackSortType\n\n\nexport type SetPackNameActionType = ReturnType<typeof setPackNameAC>\nexport type SetMinCardsCountType = ReturnType<typeof setMinCardsCountAC>\nexport type SetMaxCardsCountType = ReturnType<typeof setMaxCardsCountAC>\n\nexport type SetUserIdType = ReturnType<typeof setUserIdAC>\nexport type SetPageCountType = ReturnType<typeof setPageCountAC>\nexport type SetPageType = ReturnType<typeof setPageAC>\nexport type SetCardsPackType = ReturnType<typeof setCardsPackAC>\nexport type setCardsPackTotalCountType = ReturnType<typeof setCardsPackTotalCountAC>\n\nexport type SetPackSortType = ReturnType<typeof setPackSortType>\n/*export type SETPackSortFieldType = ReturnType<typeof SETPackSortFieldType>*/\n\nexport const getAllPack = () => {\n    return (dispatch: ThunkDispatch<AppStoreType, {}, AnyAction>, getState: () => AppStoreType) => {\n        dispatch(setAppStatusAC('loading'))\n        let {\n            packName, page, pageCount,\n            min, max, user_id, sortField,\n            isSortTypeAscending,\n        } = getState().pack;\n              let sortPacks\n        // if sortField set create sortPacks field '0created' '1updated'\n        if (sortField) {\n            sortPacks = +isSortTypeAscending + sortField;\n        }\n        // create GET query params object from state\n        const getPackQueryObject: GetPackQueryParamsType = {\n            params: {\n                ...(packName !== null && {packName}),\n                ...(min !== null && {min}),\n                ...(max !== null && {max}),\n                ...(page && {page: page}),\n                ...(pageCount && {pageCount}),\n                ...(user_id !== null && {user_id}),\n                ...(sortPacks && {sortPacks: sortPacks}),\n            }\n        }\n        acsessAPI.getCardPacks(getPackQueryObject)\n            .then(res => {\n                if (res.data && res.data.cardPacks.length > 0) {\n                    dispatch(setCardsPackAC(res.data.cardPacks))\n                } else {\n                    dispatch(setCardsPackAC([]))\n                }\n                /*dispatch(setMaxCardsCountAC(res.data.maxCardsCount))\n                dispatch(setMinCardsCountAC(res.data.minCardsCount))*/\n                dispatch(setPageAC(res.data.page))\n                dispatch(setPageCountAC(res.data.pageCount))\n                dispatch(setCardsPackTotalCountAC(res.data.cardPacksTotalCount))\n                dispatch(setAppStatusAC('succeeded'))\n            })\n            .catch(error => {\n                dispatch(setAppStatusAC('failed'))\n                dispatch(setMessageErrorAC('Something went wrong'))\n            })\n    }\n}\n\nexport const deletePackByIdTC = (packId: string) => {\n    return (dispatch: ThunkDispatch<AppStoreType, {}, AnyAction>, getState: () => AppStoreType) => {\n        dispatch(setAppStatusAC('loading'))\n        acsessAPI.deleteCardsPacks(packId)\n            .then(res => {\n                dispatch(setAppStatusAC('succeeded'))\n                dispatch(getAllPack())\n            })\n            .catch(error => {\n                dispatch(setAppErrorAC(error.message))\n                dispatch(setAppStatusAC('failed'))\n            })\n    }\n}\n\nexport const addNewPackTC = (addNewPackObject: NewPackFieldsType) => {\n    return (dispatch: ThunkDispatch<AppStoreType, {}, AnyAction>, getState: () => AppStoreType) => {\n        dispatch(setAppStatusAC('loading'))\n        const newPackObject: NewPackObjectDataType = {\n            cardsPack: {\n                ...addNewPackObject\n            }\n        }\n        acsessAPI.postCardPacks(newPackObject)\n            .then(res => {\n                dispatch(setAppStatusAC('succeeded'))\n                dispatch(getAllPack())\n            })\n            .catch(error => {\n                dispatch(setAppErrorAC(error.message))\n                dispatch(setAppStatusAC('failed'))\n            })\n    }\n}\n\nexport const updateCardPack = (packId: string, packUpdateObject: PackUpdateFieldsType) => {\n    return (dispatch: ThunkDispatch<AppStoreType, {}, AnyAction>) => {\n        const updatePackQueryObject = {\n            cardsPack: {\n                _id : packId,\n                ...packUpdateObject\n            }\n        }\n        dispatch(setAppStatusAC('loading'))\n        acsessAPI.updateCardPacks(updatePackQueryObject)\n            .then(res => {\n                dispatch(setAppStatusAC('succeeded'))\n                dispatch(getAllPack())\n            })\n            .catch(error => {\n                dispatch(setAppErrorAC(error.message))\n                dispatch(setAppStatusAC('failed'))\n            })\n    }\n}","import React from 'react'\n\nconst NotFoundPage : React.FC = () => {\n    return (\n        <>\n            <h1>Not found page</h1>\n        </>\n    )\n}\nexport default NotFoundPage","import React from \"react\";\n\nexport interface MessageIconPropsType {\n    size?: string\n}\n\nconst LoadingIcon: React.FC<MessageIconPropsType> = ({size}) => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={size}\n            height={size}\n            viewBox=\"0 0 512 512\"\n        >\n            <path\n                fill=\"#6e75e2\"\n                d=\"M30 256C30 131.383 131.383 30 256 30c46.867 0 91.563 14.211 129.196 40.587h-29.074c-8.284 0-15 6.716-15 15s6.716 15 15 15h70.292c8.284 0 15-6.716 15-15V15.295c0-8.284-6.716-15-15-15s-15 6.716-15 15v37.339C366.987 18.499 312.91 0 256 0 187.62 0 123.333 26.629 74.98 74.98 26.629 123.333 0 187.62 0 256c0 44.921 11.871 89.182 34.33 127.998 2.78 4.806 7.818 7.49 12.997 7.49 2.55 0 5.134-.651 7.499-2.019 7.17-4.149 9.619-13.325 5.471-20.496C40.477 334.718 30 295.652 30 256zM477.67 128.002c-4.15-7.171-13.328-9.619-20.496-5.47-7.17 4.149-9.619 13.325-5.471 20.496C471.523 177.281 482 216.346 482 256c0 124.617-101.383 226-226 226-46.863 0-91.551-14.215-129.18-40.587h29.058c8.284 0 15-6.716 15-15s-6.716-15-15-15H85.587c-8.284 0-15 6.716-15 15v70.292c0 8.284 6.716 15 15 15s15-6.716 15-15v-37.376C145.013 493.475 199.083 512 256 512c68.38 0 132.667-26.629 181.02-74.98C485.371 388.667 512 324.38 512 256c0-44.923-11.871-89.184-34.33-127.998z\"\n            ></path>\n            <path\n                fill=\"#e2dff4\"\n                d=\"M377.424 285.689l-13.599-7.852c1.446-7.162 2.175-14.469 2.175-21.838s-.729-14.676-2.175-21.838l13.599-7.852a15.001 15.001 0 005.49-20.49l-20-34.641c-4.142-7.174-13.315-9.632-20.49-5.49l-13.602 7.853a108.886 108.886 0 00-37.821-21.856V136c0-8.284-6.716-15-15-15h-40c-8.284 0-15 6.716-15 15v15.686a108.89 108.89 0 00-37.822 21.856l-13.601-7.853c-7.174-4.144-16.349-1.685-20.49 5.49l-20 34.641c-4.142 7.174-1.684 16.348 5.49 20.49l13.598 7.851c-1.446 7.163-2.176 14.47-2.176 21.838s.729 14.676 2.176 21.838l-13.598 7.851c-7.174 4.142-9.632 13.316-5.49 20.49l20 34.641c4.142 7.175 13.315 9.633 20.49 5.49l13.601-7.853a108.865 108.865 0 0037.822 21.856V376c0 8.284 6.716 15 15 15h40c8.284 0 15-6.716 15-15v-15.686a108.886 108.886 0 0037.821-21.856l13.602 7.853c7.174 4.142 16.348 1.683 20.49-5.49l20-34.641a15.003 15.003 0 00-5.49-20.491zM256 296c-22.091 0-40-17.909-40-40s17.909-40 40-40 40 17.909 40 40-17.909 40-40 40z\"\n            ></path>\n            <path\n                fill=\"#bebcdd\"\n                d=\"M384.413 217.203a14.994 14.994 0 00-1.499-11.382l-20-34.641c-4.142-7.174-13.315-9.632-20.49-5.49l-13.602 7.853a108.886 108.886 0 00-37.821-21.856V136c0-8.284-6.716-15-15-15H256v95c22.091 0 40 17.909 40 40s-17.909 40-40 40v95h20.001c8.284 0 15-6.716 15-15v-15.686a108.886 108.886 0 0037.821-21.856l13.602 7.853c7.174 4.142 16.348 1.683 20.49-5.49l20-34.641a15.003 15.003 0 001.499-11.382 14.994 14.994 0 00-6.989-9.108l-13.599-7.852C365.271 270.676 366 263.369 366 256s-.729-14.676-2.175-21.838l13.599-7.852a14.995 14.995 0 006.989-9.107z\"\n            ></path>\n            <path\n                fill=\"#f1f1f4\"\n                d=\"M256 311c-30.327 0-55-24.673-55-55s24.673-55 55-55 55 24.673 55 55-24.673 55-55 55zm0-80c-13.785 0-25 11.215-25 25s11.215 25 25 25 25-11.215 25-25-11.215-25-25-25z\"\n            ></path>\n            <path\n                fill=\"#e2dff4\"\n                d=\"M281 256c0 13.785-11.215 25-25 25v30c30.327 0 55-24.673 55-55s-24.673-55-55-55v30c13.785 0 25 11.215 25 25z\"\n            ></path>\n            <g fill=\"#525cdd\">\n                <path\n                    d=\"M426.413.295c-8.284 0-15 6.716-15 15v37.339C366.987 18.499 312.91 0 256 0v30c46.867 0 91.563 14.211 129.196 40.587h-29.074c-8.284 0-15 6.716-15 15s6.716 15 15 15h70.292c8.284 0 15-6.716 15-15V15.295c-.001-8.284-6.717-15-15.001-15zM477.67 128.002c-4.15-7.171-13.328-9.619-20.496-5.47-7.17 4.149-9.619 13.325-5.471 20.496C471.523 177.281 482 216.346 482 256c0 124.617-101.383 226-226 226v30c68.38 0 132.667-26.629 181.02-74.98C485.371 388.667 512 324.38 512 256c0-44.923-11.871-89.184-34.33-127.998z\"></path>\n            </g>\n        </svg>\n    );\n}\n\nexport default LoadingIcon;","import React from 'react'\nimport {Card, createStyles, Grid, makeStyles, Theme, Typography} from \"@material-ui/core\";\nimport LoadingIcon from \"../icons/LoadingIcon\";\n\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        textAlign: \"center\",\n        padding: \"30px 30px\",\n        maxWidth: \"413px\",\n    },\n    loadingTitle : {\n        margin: \"30px 40px\"\n    },\n    loadingMessage : {\n        margin: \"30px 40px\"\n    }\n}))\n\nexport type LoadingPropsType = {\n    message?: string\n}\n\nconst Loading: React.FC<LoadingPropsType> = (props) => {\n\n    const classes = useStyles()\n    const {message} = props\n\n    return (\n        <Grid\n            container\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            style={{minHeight: '100vh'}}\n        >\n            <Card\n                className={classes.root}\n            >\n                <Grid item>\n                    <Typography\n                        variant={\"h1\"}\n                        className={classes.loadingTitle}\n                    >It-incubator</Typography>\n                    <LoadingIcon size={\"100px\"}/>\n                    {\n                        message &&\n                        <Typography\n                            variant={\"body1\"}\n                            className={classes.loadingMessage}\n                        >\n                            {message}\n                        </Typography>}\n                </Grid>\n            </Card>\n        </Grid>\n    )\n}\n\nexport default Loading","import React from 'react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {useFormik} from \"formik\";\nimport * as Yup from 'yup';\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {\n    Button,\n    Card, createStyles, FormControl,\n    FormGroup,\n    Grid, Link, makeStyles,\n    TextField, Theme, Typography\n} from \"@material-ui/core\";\nimport {PATH} from \"../Routes\";\nimport Loading from \"../common/c7-Progress/Loading\";\nimport {forgotPassTC} from \"../../m2-bll/redux/auth-reducer\";\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        textAlign: \"center\",\n        padding: \"30px 30px\",\n        /*maxWidth: \"413px\",*/\n        width: \"413px\",\n    },\n    formTitle: {\n        marginBottom: \"30px\",\n    },\n    formSubtitle: {\n        marginBottom: \"40px\",\n    },\n    formDescription: {\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    formLinkTitle: {\n        paddingTop: \"30px\",\n        paddingBottom: \"15px\",\n    },\n    formButtonBlock: {\n        margin: \"0px 35px\"\n    },\n    displayStretch: {\n        display: \"flex\",\n        alignItems: \"stretch\"\n    },\n    textFieldArea: {\n        margin: \"0px 10px\"\n    }\n}))\n\n\n\n\nconst RestorePassPage: React.FC = () => {\n\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const {isLoggedIn} = useSelector((state: AppStoreType) => state.auth)\n    const {isPassRequestSent,} = useSelector((state: AppStoreType) => state.auth)\n    const {errorMessage, appStatus} = useSelector((state: AppStoreType) => state.app)\n\n\n    console.log(errorMessage)\n    console.log('App status', appStatus)\n\n    type FormikErrorType = {\n        email?: string\n    }\n\n    const restoreSchema = Yup.object().shape({\n        email: Yup.string().email('Invalid email').required('Required'),\n    });\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n        },\n        validationSchema: restoreSchema,\n        onSubmit: values => {\n            dispatch(forgotPassTC(formik.values.email))\n            formik.resetForm()\n        },\n    })\n\n    if (isLoggedIn) {\n        return <Redirect to={'/'}/>\n    }\n    if (appStatus === 'loading') {\n        return <Loading message={\"Wait a minute please\"}/>\n    }\n    if (isPassRequestSent) {\n        return <Redirect to={PATH.RESTORE_PASS_CHECK_EMAIL}/>\n    }\n\n    return <Grid\n        container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{minHeight: '100vh'}}\n    >\n        <Grid item>\n            <Card\n                className={classes.root}\n            >\n                <form onSubmit={formik.handleSubmit}>\n                    <Typography\n                        variant={\"h1\"}\n                        className={classes.formTitle}\n                    >It-incubator</Typography>\n                    <Typography\n                        variant={\"h2\"}\n                        className={classes.formSubtitle}\n                    >Forget your password</Typography>\n                    <FormControl className={classes.displayStretch}>\n                        <FormGroup className={classes.textFieldArea}>\n                            <TextField\n                                type=\"email\"\n                                label=\"Email\"\n                                margin=\"normal\"\n                                {...formik.getFieldProps('email')}\n                            />\n                            {\n                                formik.touched.email && formik.errors.email &&\n                                <div style={{color: 'red'}}>{formik.errors.email}</div>\n                            }\n                            <Typography\n                                variant={\"body1\"}\n                                className={classes.formDescription}\n                                align={\"left\"}\n                            >\n                                Enter your email address and we will send you further instructions\n                            </Typography>\n                            <Button\n                                type={'submit'}\n                                variant={'contained'}\n                                className={classes.formButtonBlock}\n                                color={'primary'}>Send instructions</Button>\n                            <Typography\n                                variant={\"body1\"}\n                                className={classes.formLinkTitle}\n                            >Did you remember your password</Typography>\n                            <Link\n                                component={NavLink}\n                                to={PATH.LOGIN}\n                                color={\"textPrimary\"}\n                            >Try logging in\n                            </Link>\n                        </FormGroup>\n                    </FormControl>\n                </form>\n            </Card>\n        </Grid>\n    </Grid>\n}\nexport default RestorePassPage","import React, {useState} from 'react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {useFormik} from \"formik\";\nimport * as Yup from 'yup';\nimport { Redirect} from \"react-router-dom\";\nimport { useParams } from 'react-router-dom'\n/*import {setNewPasswordTC} from \"../../m2-bll/redux/restore-pass-reducer\";*/\n/*import {setNew}*/\n\nimport {\n    Button,\n    Card, createStyles,\n    FormControl,\n    FormGroup,\n    Grid, IconButton, Input, InputAdornment,  makeStyles,\n    Theme, Typography\n} from \"@material-ui/core\";\nimport {PATH} from \"../Routes\";\nimport {Visibility, VisibilityOff} from '@material-ui/icons';\nimport {setNewPasswordTC} from \"../../m2-bll/redux/auth-reducer\";\n\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        textAlign: \"center\",\n        padding: \"30px 30px\",\n        maxWidth: \"413px\",\n    },\n    formTitle: {\n        marginBottom: \"30px\",\n    },\n    formSubtitle: {\n        marginBottom: \"20px\",\n    },\n    formDescription: {\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    formLinkTitle: {\n        paddingTop: \"30px\",\n        paddingBottom: \"15px\",\n    },\n    formButtonBlock: {\n        margin: \"35px 35px\"\n    },\n    errorBlock: {\n        paddingTop: \"20px\"\n    }\n}))\n\n\nconst NewPassPage: React.FC = () => {\n\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const { isLoggedIn} = useSelector((state: AppStoreType) => state.auth)\n    const { isPassChanged} = useSelector((state: AppStoreType) => state.auth)\n    const { appStatus } = useSelector((state: AppStoreType) => state.app)\n    const [showPassword, setShowPassword] = useState(false)\n    const { token } = useParams<{token: string}>();\n    console.log('Token', token)\n\n    type FormikErrorType = {\n        password?: string\n    }\n\n    const restoreSchema = Yup.object().shape({\n        password: Yup.string()\n            .required('No password provided.')\n            .min(8, 'Password is too short - should be at least 8 character.')\n            .matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, 'Minimum eight characters, at least one letter, one number and one special character.'),\n    });\n\n    const formik = useFormik({\n        initialValues: {\n            password: '',\n        },\n        validationSchema: restoreSchema,\n        onSubmit: values => {\n            if (token) {\n                dispatch(setNewPasswordTC(formik.values.password, token))\n            }\n            formik.resetForm()\n        },\n    })\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword)\n    }\n    const handleMouseDownPassword = () => {\n        setShowPassword(!showPassword)\n    }\n    if ( appStatus === 'loading') {\n        return <div>Loading</div>\n    }\n    if (isLoggedIn) {\n        return <Redirect to={'/'}/>\n    }\n    if (isPassChanged) {\n        return <Redirect to={PATH.LOGIN}/>\n    }\n\n    return <Grid\n        container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{minHeight: '100vh'}}\n    >\n        <Card\n            className={classes.root}\n        >\n            <Grid item>\n                <form onSubmit={formik.handleSubmit}>\n                    <Typography\n                        variant={\"h1\"}\n                        className={classes.formTitle}\n                    >It-incubator</Typography>\n                    <Typography\n                        variant={\"h2\"}\n                        className={classes.formSubtitle}\n                    >Create new pasword</Typography>\n                    <FormControl>\n                        <FormGroup>\n                            <Input\n                                type={showPassword ? 'text' : 'password'}\n                                placeholder={\"Password\"}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility/> : <VisibilityOff/>}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                {...formik.getFieldProps('password')}\n\n                            />\n                            {\n                                (formik.touched.password && formik.errors.password) ?\n                                    <div\n                                        style={{color: 'red'}}\n                                        className={classes.errorBlock}\n\n                                    >{formik.errors.password}</div> :\n                                    <br/>\n                            }\n                            <Typography\n                                variant={\"body1\"}\n                                className={classes.formDescription}\n                                align={\"left\"}\n                            >\n                                Create new password and we will send you further instructions to email\n                            </Typography>\n                            <Button\n                                type={'submit'}\n                                variant={'contained'}\n                                className={classes.formButtonBlock}\n                                color={'primary'}>Create new password</Button>\n                        </FormGroup>\n                    </FormControl>\n                </form>\n            </Grid>\n        </Card>\n    </Grid>\n}\nexport default NewPassPage","import React from \"react\";\n\nexport interface MessageIconPropsType  {\n    size? : string\n}\n\nconst MessageIcon : React.FC<MessageIconPropsType> = ({size}) =>  {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            /*width=\"512\"\n            height=\"512\"*/\n            height={ size }\n            width={ size }\n            viewBox=\"0 0 512 512\"\n        >\n            <linearGradient\n                id=\"SVGID_1_\"\n                x1=\"432.334\"\n                x2=\"198.334\"\n                y1=\"502.645\"\n                y2=\"192.646\"\n                gradientUnits=\"userSpaceOnUse\"\n            >\n                <stop offset=\"0\" stopColor=\"#d2deff\" stopOpacity=\"0\"></stop>\n                <stop offset=\"1\" stopColor=\"#b7c5ff\"></stop>\n            </linearGradient>\n            <path\n                fill=\"url(#SVGID_1_)\"\n                d=\"M501.873 153.583c-22.357-56.888-91.226-91.003-149.556-68.427-66.582 25.77-44.506 131.673-104.983 153.088-32.669 11.568-80.962-31.644-113.969-38.271-60.821-12.21-115.881 30.705-129.439 90.134-13.832 60.63 8.353 141.61 74.967 158.066 79.35 19.602 120.683-51.729 187.249-72.211 68.31-21.019 144.263 28.622 200.814-31.776 41.78-44.62 57.055-134.271 34.917-190.603z\"\n            ></path>\n            <path\n                fill=\"#2626bc\"\n                d=\"M476.847 178.593c0-39.497-32.019-71.517-71.517-71.517-30.6 0-56.699 19.225-66.91 46.25H79.812c-11.046 0-20 8.954-20 20v221.41c0 11.046 8.954 20 20 20h352.375c11.046 0 20-8.954 20-20v-162.14c15.099-13.113 24.66-32.435 24.66-54.003z\"\n                opacity=\"0.1\"\n            ></path>\n            <g fill=\"#fff\">\n                <path d=\"M432.187 389.736H79.812c-11.046 0-20-8.954-20-20v-221.41c0-11.046 8.954-20 20-20h352.375c11.046 0 20 8.954 20 20v221.41c0 11.046-8.954 20-20 20z\"></path>\n                <path d=\"M262.092 223.711l190.096 146.025c0 11.046-8.954 20-20 20H79.812c-11.046 0-20-8.954-20-20l190.096-146.025a10 10 0 0112.184 0z\"></path>\n                <path d=\"M249.908 294.352L59.812 148.326c0-11.046 8.954-20 20-20h352.375c11.046 0 20 8.954 20 20L262.092 294.352a10.002 10.002 0 01-12.184 0z\"></path>\n            </g>\n            <path\n                fill=\"#6583fe\"\n                d=\"M370.947 363.125h-32.134a5 5 0 01-5-5v-22.154a5 5 0 015-5h32.134a5 5 0 015 5v22.154a5 5 0 01-5 5z\"\n            ></path>\n            <path\n                fill=\"#2626bc\"\n                d=\"M311.871 342.743h-27.833a5 5 0 110-10h27.833a5 5 0 110 10zM311.871 363.125h-97.833a5 5 0 110-10h97.833a5 5 0 110 10z\"\n            ></path>\n            <g>\n                <ellipse\n                    cx=\"405.33\"\n                    cy=\"153.593\"\n                    fill=\"#6583fe\"\n                    rx=\"71.517\"\n                    ry=\"71.517\"\n                    transform=\"rotate(-80.8 405.29 153.649)\"\n                ></ellipse>\n                <path\n                    fill=\"#2626bc\"\n                    d=\"M405.33 230.11c42.191 0 76.517-34.325 76.517-76.517s-34.325-76.517-76.517-76.517-76.517 34.325-76.517 76.517c0 24.544 11.629 46.41 29.653 60.421l-99.42 76.372a5.004 5.004 0 01-6.092 0L64.992 146c1.121-7.17 7.341-12.674 14.82-12.674h229.366a5 5 0 100-10H79.812c-13.785 0-25 11.215-25 25v221.41c0 13.785 11.215 25 25 25h352.375c13.785 0 25-11.215 25-25v-132.14a5 5 0 10-10 0V359.59L316.28 259.031l50.94-39.13a76.017 76.017 0 0038.11 10.209zm-209.61 28.921L64.812 359.59V158.472zm251.27 113.018c-1.118 7.174-7.32 12.687-14.803 12.687H79.812c-7.483 0-13.685-5.513-14.803-12.687l138.919-106.713 42.934 32.98c2.69 2.066 5.914 3.1 9.138 3.1s6.447-1.033 9.138-3.1l42.934-32.981zM338.813 153.593c0-36.677 29.839-66.517 66.517-66.517s66.517 29.839 66.517 66.517c0 36.677-29.839 66.517-66.517 66.517s-66.517-29.84-66.517-66.517z\"\n                ></path>\n            </g>\n            <path\n                fill=\"#fff\"\n                d=\"M374.114 129.204l10.206 24.389-10.206 24.389c-1.733 4.142 2.448 8.292 6.577 6.528l61.619-26.319c4.048-1.729 4.048-7.467 0-9.196l-61.619-26.319c-4.129-1.764-8.31 2.386-6.577 6.528z\"\n            ></path>\n            <g fill=\"#6583fe\">\n                <path d=\"M330.828 81.671a14.45 14.45 0 01-10.253-4.24c-5.654-5.654-5.654-14.853 0-20.506 5.651-5.652 14.852-5.654 20.505 0 5.654 5.654 5.654 14.853 0 20.506a14.45 14.45 0 01-10.252 4.24zm0-18.991a4.487 4.487 0 00-3.183 1.316 4.506 4.506 0 000 6.364 4.505 4.505 0 006.364 0 4.506 4.506 0 000-6.364 4.487 4.487 0 00-3.181-1.316zM218.538 459.315a14.457 14.457 0 01-10.253-4.24c-5.654-5.654-5.654-14.853 0-20.506 5.652-5.653 14.854-5.653 20.506 0 5.654 5.654 5.654 14.853 0 20.506a14.453 14.453 0 01-10.253 4.24zm0-18.991a4.487 4.487 0 00-3.183 1.316 4.506 4.506 0 000 6.364 4.506 4.506 0 006.365 0 4.506 4.506 0 000-6.364 4.487 4.487 0 00-3.182-1.316zM294.78 94.547a4.983 4.983 0 01-3.535-1.464l-5.965-5.964-5.965 5.964a5 5 0 01-7.07-7.071l9.5-9.5a5 5 0 017.07 0l9.5 9.5a5 5 0 01-3.535 8.535zM439.746 440.322a4.983 4.983 0 01-3.535-1.464l-5.965-5.964-5.965 5.964a5 5 0 01-7.07-7.071l9.5-9.5a5 5 0 017.07 0l9.5 9.5a5 5 0 01-3.535 8.535zM178.884 445.072a4.983 4.983 0 01-3.535-1.464l-5.965-5.964-5.965 5.964a5 5 0 01-7.07-7.071l9.5-9.5a5 5 0 017.07 0l9.5 9.5a5 5 0 01-3.535 8.535z\"></path>\n            </g>\n        </svg>\n    );\n}\n\nexport default MessageIcon;","import React from 'react'\nimport { useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {useFormik} from \"formik\";\nimport * as Yup from 'yup';\nimport { Redirect} from \"react-router-dom\";\n\nimport {Card, createStyles,\n\n    Grid,  makeStyles,\n     Theme, Typography\n} from \"@material-ui/core\";\nimport MessageIcon from '../common/icons/MessageIcon';\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        textAlign: \"center\",\n        padding: \"30px 30px\",\n        maxWidth: \"413px\",\n    },\n    formSubtitle: {\n        marginBottom: \"20px\",\n    },\n    formDescription: {\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    formLinkTitle: {\n        paddingTop: \"30px\",\n        paddingBottom: \"15px\",\n    },\n    formButtonBlock: {\n        margin: \"0px 35px\"\n    },\n    formIcon: {\n        /*fontSize: \"64px\",*/\n        margin: \"25px 0px\",\n        color: \"#21268F\",\n        opacity: 0.7,\n    }\n}))\n\n\nconst RestorePassPage: React.FC = () => {\n\n    const classes = useStyles()\n    const isLoggedIn = useSelector((state: AppStoreType) => state.auth.isLoggedIn)\n\n    if (isLoggedIn) {\n        return <Redirect to={'/'}/>\n    }\n\n    return <Grid\n        container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{minHeight: '100vh'}}\n    >\n        <Card\n            className={classes.root}\n        >\n            <Grid item>\n                <Typography\n                    variant={\"h1\"}\n                    className={classes.formTitle}\n                >It-incubator</Typography>\n                <div className={classes.formIcon}>\n                    <MessageIcon\n                        size=\"72px\"\n                    />\n                </div>\n                <Typography\n                    variant={\"h2\"}\n                    className={classes.formSubtitle}\n                >Forget your password</Typography>\n                <Typography\n                    variant={\"body1\"}\n                    className={classes.formDescription}\n                >\n                    We’ve sent an Email with instructions to example@mail.com\n                </Typography>\n            </Grid>\n        </Card>\n    </Grid>\n}\nexport default RestorePassPage","import React, {useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport {AppStoreType} from \"../../../m2-bll/redux/store\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setMinCardsCountAC, setMaxCardsCountAC, getAllPack} from \"../../../m2-bll/redux/pack-reducer\";\n\nconst useStyles = makeStyles({\n    root: {\n        /*width: 300,*/\n    },\n});\n\nfunction valuetext(value: number) {\n    return `${value}`;\n}\n\nexport default function RangeSlider() {\n\n    const pack = useSelector((state: AppStoreType) => state.pack);\n    const [value, setValue] = React.useState<number[]>([0, 103]);\n\n    const dispatch = useDispatch();\n\n    const getAllPacks = () => {\n        dispatch(getAllPacks())\n    };\n\n    const handleChange = (event: any, newValue: number | number[]) => {\n        setValue(newValue as number[]);\n     //    debounding можно перенести сюда из useEffect\n    };\n\n\n    useEffect(() => {\n        if ((pack.min != null) && pack.min !== value[0]  && pack.max && pack.max !== value[1]) {\n            setValue([pack.min, pack.max])\n        }\n    }, [pack]);\n\n\n\n    useEffect(() => {\n        console.log(\"min happen\")\n\n        const setTO = setTimeout(() => {\n                 dispatch(setMinCardsCountAC(value[0]))\n                 dispatch( getAllPack())\n            }, 1500)\n            return () => {\n                clearTimeout(setTO)\n            }\n        }, [value[0]]\n    );\n\n    useEffect(() => {\n            const setTO = setTimeout(() => {\n                 dispatch(setMaxCardsCountAC(value[1]))\n                 dispatch( getAllPack())\n            }, 1500)\n            return () => {\n                clearTimeout(setTO)\n            }\n        }, [value[1]]\n    );\n\n\n    return (\n        <>\n            <Slider\n                value={value}\n                // onMouseUp...\n                onChange={handleChange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={valuetext}\n            />\n\n        </>\n    );\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from \"@material-ui/core/Button\";\nimport Typography from '@material-ui/core/Typography';\nimport {ButtonGroup} from \"@material-ui/core\";\nimport {getAllPack, setUserIdAC} from \"../../../m2-bll/redux/pack-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../../m2-bll/redux/store\";\nimport {UserProfileType} from \"../../../m3-dal/Api\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 0,\n    },\n    privateModeHeader : {\n        marginBottom : \"20px\",\n    },\n    privateModeBlock : {\n        display: \"flex\",\n        alignItems: \"stretch\",\n        marginBottom : \"40px\",\n    },\n    modeButton : {\n        padding: \"8px 32px\",\n        borderRadius: \"0px\",\n        textAlign: \"center\",\n    },\n    paper: {\n        /*padding: theme.spacing(1),*/\n        /*textAlign: 'left',*/\n        /*color: theme.palette.text.secondary,*/\n        /*height: 600,*/\n        /*backgroundColor: \"#e2dfef\"*/\n    },\n    sliderCaption: {\n        marginBottom : \"40px\",\n        /*padding: theme.spacing(6),*/\n        /*textAlign: 'center',*/\n    },\n}));\n\nexport default function RangeButtons() {\n    const classes = useStyles();\n\n    const pack = useSelector((state: AppStoreType) => state.pack);\n    const [hint, setHint] = React.useState<string>(\"Only my cards are displayed\");\n    const userProfile = useSelector<AppStoreType, UserProfileType>(state => state.auth)\n\n    const dispatch = useDispatch();\n\n    const myButtonClickHandler=()=>{\n        dispatch (setUserIdAC(userProfile._id))\n        dispatch(getAllPack())\n        setHint(\"Only my cards are displayed\")\n    };\n    const allButtonClickHandler=()=>{\n        dispatch (setUserIdAC(\"\"))\n        dispatch(getAllPack())\n        setHint(\"All cards are displayed\")\n    };\n\n    return (\n        <div className={classes.root}>\n            <Grid container>\n                <Typography\n                    variant=\"h3\"\n                    className={classes.privateModeHeader}\n                >\n                    Show pack cards\n                </Typography>\n                <ButtonGroup\n                    variant=\"text\"\n                    color=\"primary\"\n                    aria-label=\"small outlined secondary button group\"\n                    /*aria-label=\"outlined primary button group\"*/\n                    className={classes.privateModeBlock}\n                >\n                    <Button onClick={myButtonClickHandler}\n                        className={classes.modeButton}\n                    >My</Button>\n                    <Button onClick={allButtonClickHandler}\n                        className={classes.modeButton}\n                    >ALL</Button>\n                </ButtonGroup>\n                <Typography\n                    variant=\"h3\"\n                    className={classes.privateModeHeader}\n                >\n                    {hint}\n                </Typography>\n            </Grid>\n        </div>\n    );\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport RangeSlider from './RangeSlider' ;\nimport Typography from '@material-ui/core/Typography';\nimport RangeButtons from \"./RangeButtons\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 0,\n    },\n    privateModeHeader : {\n        marginBottom : \"20px\",\n    },\n    privateModeBlock : {\n        display: \"flex\",\n        alignItems: \"stretch\",\n        marginBottom : \"40px\",\n    },\n    modeButton : {\n        padding: \"8px 32px\",\n        borderRadius: \"0px\",\n        textAlign: \"center\",\n    },\n    paper: {\n        /*padding: theme.spacing(1),*/\n        /*textAlign: 'left',*/\n        /*color: theme.palette.text.secondary,*/\n        /*height: 600,*/\n        /*backgroundColor: \"#e2dfef\"*/\n    },\n    sliderCaption: {\n        marginBottom : \"40px\",\n        /*padding: theme.spacing(6),*/\n        /*textAlign: 'center',*/\n    },\n}));\n\nexport default function RangeShowCard() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Grid container>\n                <RangeButtons/>\n                <Typography\n                    variant=\"h3\"\n                    gutterBottom\n                    className={classes.sliderCaption}\n                >\n                    Number of cards\n                </Typography>\n                <RangeSlider/>\n            </Grid>\n        </div>\n    );\n}\n","import React from \"react\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {PackDataType} from \"../../../m3-dal/Api\";\nimport {useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../../m2-bll/redux/store\";\n\ninterface Data {\n    calories: number;\n    carbs: number;\n    fat: number;\n    name: string;\n    protein: number;\n}\n\nexport function descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n    order: Order,\n    orderBy: Key,\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\ninterface HeadCell {\n    disablePadding: boolean;\n    id: keyof PackDataType;\n    label: string;\n    numeric: boolean;\n}\n\nconst headCells: HeadCell[] = [\n    {id: 'name', numeric: false, disablePadding: false, label: 'Name'},\n    {id: 'cardsCount', numeric: true, disablePadding: false, label: 'Cards'},\n    {id: 'updated', numeric: true, disablePadding: false, label: 'Last updated'},\n    {id: 'user_name', numeric: true, disablePadding: false, label: 'Created by'},\n];\n\ninterface DeckTableHeaderPropsType {\n    numSelected: number;\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof PackDataType) => void;\n    onSelectAllClick?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    rowCount: number;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        paper: {\n            width: '100%',\n            marginBottom: theme.spacing(2),\n        },\n        table: {\n            minWidth: 750,\n        },\n        visuallyHidden: {\n            border: 0,\n            clip: 'rect(0 0 0 0)',\n            height: 1,\n            margin: -1,\n            overflow: 'hidden',\n            padding: 0,\n            position: 'absolute',\n            top: 20,\n            width: 1,\n        },\n    }),\n);\n\n\nconst DeckTableHeader: React.FC<DeckTableHeaderPropsType> = (props) => {\n    const classes = useStyles()\n    const {numSelected, rowCount, onRequestSort} = props;\n    const createSortHandler = (property: keyof PackDataType) => (event: React.MouseEvent<unknown>) => {\n        onRequestSort(event, property);\n    };\n    const {sortField, isSortTypeAscending} = useSelector((state: AppStoreType) => state.pack)\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\n                        sortDirection={isSortTypeAscending ? 'asc' : 'desc'}\n                    >\n                        <TableSortLabel\n                            active={sortField === headCell.id}\n                            direction={isSortTypeAscending ? 'asc' : 'desc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {sortField === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                            {isSortTypeAscending ? 'sorted descending' : 'sorted ascending'}\n                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n\n                <TableCell\n                    align={'right'}\n                >Action</TableCell>\n            </TableRow>\n        </TableHead>\n    );\n}\n\nexport default DeckTableHeader","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Typography} from \"@material-ui/core\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\nexport interface ModalPropsType {\n    modalTitle: string\n    modalText?: string\n    openStatus: boolean\n    handleCloseModal: (openStatus: boolean) => void\n    modalActionCallback: () => void\n    actionButtonTitle: string\n    children?: JSX.Element\n    // close Modal Window after action\n    closeAfterAction?: boolean\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n            width: \"400px\",\n        },\n    }),\n);\n\nconst ModalForm: React.FC<ModalPropsType> = (props) => {\n\n    const classes = useStyles();\n    const {\n        openStatus, handleCloseModal,\n        modalActionCallback, modalTitle, modalText,\n        actionButtonTitle, closeAfterAction = true, children,\n    } = props\n\n    const handleClose = () => {\n        handleCloseModal && handleCloseModal(false)\n    };\n    const handleAction = () => {\n        modalActionCallback && modalActionCallback();\n        handleCloseModal && handleCloseModal(false)\n    }\n\n    return (\n        <div>\n            <Dialog\n                open={openStatus}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <div className={classes.root}>\n                    {modalTitle && <DialogTitle id=\"alert-dialog-title\">{modalTitle}</DialogTitle>}\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            {modalText && <Typography variant={\"body1\"}>{modalText}</Typography>}\n                            {children}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={handleAction} color=\"primary\" autoFocus>\n                            {actionButtonTitle}\n                        </Button>\n                    </DialogActions>\n                </div>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default ModalForm","import React, {useState} from 'react'\nimport TableCell from \"@material-ui/core/TableCell\";\nimport {Button, Link} from \"@material-ui/core\";\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {PATH} from \"../../Routes\";\nimport moment from \"moment\";\nimport ModalForm from \"../c9-Modal/ModalForm\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport {PackResponseDataType, PackUpdateFieldsType} from \"../../../m3-dal/Api\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../../m2-bll/redux/store\";\nimport {deletePackByIdTC, updateCardPack} from \"../../../m2-bll/redux/pack-reducer\";\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        tableRow: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.action.hover,\n            },\n        },\n    })\n)\n\nexport interface DeckTableRowPropsType {\n    deck: PackResponseDataType\n    labelId: string\n}\n\nconst DeckTableRow: React.FC<DeckTableRowPropsType> = ({deck, labelId}) => {\n    const classes = useStyles()\n    const {_id} = useSelector((state: AppStoreType) => state.auth)\n    const [modalDeleteStatus, setModalDeleteStatus] = useState<boolean>(false);\n    const [modalEditStatus, setModalEditStatus] = useState<boolean>(false);\n    const [packName, setPackName] = useState<string | null>(null)\n    const dispatch = useDispatch()\n\n    const handleDeletePack = (deckId: string) => {\n        dispatch(deletePackByIdTC(deckId))\n    }\n\n    const handleEditDeck = (deckId: string) => {\n        const updateObjectFields: PackUpdateFieldsType = {\n            ...(packName && {name: packName}),\n        }\n        dispatch(updateCardPack(deckId, updateObjectFields))\n        setPackName(null)\n    }\n\n    const handlePackNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setPackName(event.target.value)\n    }\n\n    return (\n        <TableRow\n            role=\"checkbox\"\n            tabIndex={-1}\n            key={deck._id}\n            className={classes.tableRow}\n        >\n            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"normal\">\n                <Link\n                    variant={\"body1\"}\n                    component={NavLink}\n                    to={`${PATH.CARDS}/${deck._id}`}\n                    color={\"textPrimary\"}\n                >\n                    {deck.name.length > 20 ? deck.name.slice(0, 20) + '...' : deck.name}\n                </Link>\n            </TableCell>\n            <TableCell align=\"right\">{deck.cardsCount}</TableCell>\n            <TableCell\n                align=\"right\">{moment(deck.updated).format(\"DD.MM.YYYY\")}</TableCell>\n            <TableCell align=\"right\">\n                {deck.user_name.length > 20 ? deck.user_name.slice(0, 20) + '...' : deck.user_name}\n            </TableCell>\n            <TableCell align=\"right\">\n                {\n                    deck.user_id === _id &&\n                    <>\n                        <Button\n                            onClick={() => {\n                                setModalDeleteStatus(true)\n                            }}>Delete</Button>\n                        <Button\n                            onClick={() => {\n                                setModalEditStatus(true)\n                            }}>Edit</Button>\n\n\n                        <ModalForm\n                            modalTitle={\"Edit Pack\"}\n                            actionButtonTitle={\"Edit\"}\n                            openStatus={modalEditStatus}\n                            handleCloseModal={setModalEditStatus}\n                            modalActionCallback={() => {\n                                handleEditDeck(deck._id)\n                            }}\n                        >\n                            <TextField\n                                value={packName === null ? deck.name : packName}\n                                onChange={handlePackNameChange}\n                                margin=\"dense\"\n                                id=\"packName\"\n                                label=\"Pack name\"\n                                type=\"string\"\n                                fullWidth\n                            />\n                        </ModalForm>\n                        <ModalForm\n                            modalTitle={\"Delete Pack\"}\n                            modalText={\"Do you really want to delete pack\"}\n                            openStatus={modalDeleteStatus}\n                            handleCloseModal={setModalDeleteStatus}\n                            modalActionCallback={() => {\n                                handleDeletePack(deck._id)\n                            }}\n                            actionButtonTitle={\"Delete\"}\n                        />\n                    </>\n                }\n                <Button component={NavLink} to={`${PATH.LEARN}/${deck._id}`}>Learn</Button>\n            </TableCell>\n        </TableRow>\n    )\n}\n\nexport default DeckTableRow","import React, {useEffect, useState} from 'react';\nimport {createStyles, lighten, makeStyles, Theme} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport DeckTableHeader from \"./DeckTableHeader\";\nimport {PackDataType, PackUpdateFieldsType} from \"../../../m3-dal/Api\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../../m2-bll/redux/store\";\nimport {Button, Link} from \"@material-ui/core\";\nimport {\n    deletePackByIdTC,\n    getAllPack,\n    setPackSortType,\n    setPageAC,\n    setPageCountAC, updateCardPack\n} from \"../../../m2-bll/redux/pack-reducer\";\nimport moment from 'moment'\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from \"../../Routes\";\nimport ModalForm from \"../c9-Modal/ModalForm\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DeckTableRow from \"./DeckTableRow\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        paper: {\n            width: '100%',\n            marginBottom: theme.spacing(2),\n        },\n        table: {\n            minWidth: 750,\n        },\n        tableRow: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.action.hover,\n            },\n        },\n        visuallyHidden: {\n            border: 0,\n            clip: 'rect(0 0 0 0)',\n            height: 1,\n            margin: -1,\n            overflow: 'hidden',\n            padding: 0,\n            position: 'absolute',\n            top: 20,\n            width: 1,\n        },\n    }),\n);\n\nconst DeckTable: React.FC = () => {\n    const classes = useStyles();\n    const [selected, setSelected] = useState<string[]>([]);\n\n    const {pack} = useSelector((state: AppStoreType) => state)\n    const {_id} = useSelector((state: AppStoreType) => state.auth)\n    const dispatch = useDispatch()\n\n    const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof PackDataType) => {\n        dispatch(setPackSortType(!pack.isSortTypeAscending, property))\n    };\n\n    useEffect(() => {\n        dispatch(getAllPack())\n    }, [pack.isSortTypeAscending, pack.sortField, pack.page, pack.pageCount, pack.packName])\n\n    const handleChangePage = (event: unknown, newPage: number) => {\n        dispatch(setPageAC(newPage + 1));\n    };\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(setPageCountAC(parseInt(event.target.value, 10)))\n    };\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={'small'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <DeckTableHeader\n                            numSelected={selected.length}\n                            onRequestSort={handleRequestSort}\n                            rowCount={pack.cardPacksTotalCount}\n                        />\n                        <TableBody>\n                            {\n                                pack.cardPacks\n                                    .map((deck, index) => {\n                                        const labelId = `enhanced-table-checkbox-${index}`;\n                                        return (\n                                            <DeckTableRow\n                                                deck={deck}\n                                                key={deck._id}\n                                                labelId={labelId}\n                                            />\n                                        );\n                                    })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 15]}\n                    component=\"div\"\n                    // total number of rows from server side\n                    count={pack.cardPacksTotalCount}\n                    // rows per page\n                    rowsPerPage={pack.pageCount}\n                    // current page(starts from 0) from server side - 1\n                    page={pack.page - 1}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n}\nexport default DeckTable\n","import React, {KeyboardEventHandler, useState} from 'react';\nimport {makeStyles, createStyles, Theme} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport {useDispatch} from \"react-redux\";\nimport {addNewPackTC, setPackNameAC} from \"../../../m2-bll/redux/pack-reducer\";\nimport ModalForm from '../../common/c9-Modal/ModalForm';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        rootGrid: {\n            flexGrow: 1,\n        },\n        search: {\n            display: \"flex\",\n            alignItems: \"stretch\",\n            backgroundColor: \"#e2dfef\"\n        },\n        searchInputBlock: {\n            flexGrow: 3,\n        },\n        addDeckBlock: {\n            marginLeft: \"20px\",\n        }\n    }),\n);\n\nexport default function Search() {\n    const classes = useStyles();\n    const dispatch = useDispatch()\n    const [search, setSearch] = React.useState('');\n    const [type, setType] = useState<string>('')\n    const [name, setName] = useState<string>('first deck updated')\n    const [path, setPath] = useState<string>('')\n    const [grade, setGrade] = useState<number>(0)\n    const [shots, setShots] = useState<number>(0)\n    const [rating, setRating] = useState<number>(0)\n    const [deckCover, setDeckCover] = useState<string>('')\n    const [privateDeck, setPrivateDeck] = useState<boolean>(false)\n    const [modalAddStatus, setModalAddStatus] = useState<boolean>(false);\n    const [packName, setPackName] = useState<string>('')\n\n    const inputHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setSearch(event.target.value);\n    };\n\n    const handleAddPAck = () => {\n        if (packName) {\n            let newObject = {\n                name : packName\n            }\n            dispatch(addNewPackTC(newObject))\n        }\n    }\n\n    const handlePackNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setPackName(event.target.value)\n    }\n\n    return (\n        <div\n            /*className={classes.rootGrid}*/\n        >\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"flex-start\"\n                alignItems=\"stretch\"\n            >\n                <Grid\n                    item\n                    className={classes.searchInputBlock}\n                >\n                    <TextField\n                        size={\"small\"}\n                        className={classes.search}\n                        style={{backgroundColor: \"#ECECF9\"}}\n                        label=\"Search\"\n                        placeholder=\"Input list name\"\n                        variant=\"outlined\"\n                        onChange={inputHandleChange}\n                        /*onKeyDown={handlePressEnter}*/\n                        onKeyUp={(event) => {\n                            console.log('Event', event)\n                            if (event.key === 'Enter') {\n                                if (!search) {\n                                    dispatch(setPackNameAC(null))\n                                }\n                                console.log('Enter');\n                                dispatch(setPackNameAC(search));\n                                setSearch('');\n                            }\n                        }}\n                    />\n                </Grid>\n                <Grid\n                    item\n                    className={classes.addDeckBlock}\n                >\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => setModalAddStatus(true)}\n                    >\n                        Add new pack\n                    </Button>\n                    <ModalForm\n                        modalTitle={\"Add Pack\"}\n                        modalText={\"Please specify pack name\"}\n                        openStatus={modalAddStatus}\n                        handleCloseModal={setModalAddStatus}\n                        modalActionCallback={() => {\n                            handleAddPAck()\n                        }}\n                        actionButtonTitle={\"Add pack\"}\n                    >\n                        <TextField\n                            value={packName}\n                            onChange={handlePackNameChange}\n                            margin=\"dense\"\n                            id=\"packName\"\n                            label=\"Pack name\"\n                            type=\"string\"\n                            fullWidth\n                        />\n                    </ModalForm>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","import React, {useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport RangeShowCard from './RangeShowCard';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../../m2-bll/redux/store\";\n\nimport {Card, Paper} from \"@material-ui/core\";\nimport {Redirect} from \"react-router-dom\";\nimport {PATH} from \"../../Routes\";\nimport {acsessAPI, UserProfileType} from \"../../../m3-dal/Api\";\nimport DeckTable from \"../../common/c8-Table/DeckTable\";\nimport Search from './Search';\nimport Typography from \"@material-ui/core/Typography\";\nimport {authMeTC} from \"../../../m2-bll/redux/auth-reducer\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        /*flexGrow: 1,*/\n        marginTop: \"40px\",\n        marginBottom: \"40px\",\n        minWidth: 750,\n    },\n    paper: {\n        margin: 'auto',\n        maxWidth: 1200,\n    },\n    filterBlock: {\n        backgroundColor: \"#ECECF9\",\n        maxWidth: \"250px\",\n        padding: \"30px\",\n        flexGrow: 1,\n    },\n    mainBlock: {\n        width: \"fit-content\",\n        flexGrow: 3,\n        margin: \"30px\",\n        maxWidth: \"950px\",\n        boxSizing : \"border-box\",\n    },\n    mainSearchBlock: {\n        /*flexGrow: 1,*/\n        marginBottom: \"20px\",\n    },\n    mainSearchHeader : {\n        marginBottom: \"20px\",\n    },\n    mainTableBlock: {\n        /*maxWidth: \"500px\",*/\n    }\n}));\n\nexport default function Pack() {\n    const classes = useStyles();\n\n    const {_id} = useSelector((state: AppStoreType) => state.auth);\n    const pack = useSelector((state: AppStoreType) => state.pack);\n    const userProfile = useSelector<AppStoreType, UserProfileType>(state => state.auth)\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        if (!userProfile._id) {\n              dispatch(authMeTC())\n           }\n    }, []);\n\n\n    // if (!userProfile._id) {\n    //     async function f() {\n    //         dispatch(authMeTC())\n    //    }\n    //\n    //     f().then(\n    //      if (!userProfile._id){ Redirect from={PATH.ALL_ROUTES} to=\"/login\"/  }\n    //      );\n    // }\n\n\n\n\n     if (userProfile._id) {\n        return (\n            <div className={classes.root}>\n                <Paper\n                    elevation={4}\n                    className={classes.paper}\n                    square={false}\n                >\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justifyContent=\"flex-start\"\n                        alignItems=\"stretch\"\n                    >\n                        <Grid\n                            item\n                            className={classes.filterBlock}\n                        >\n                            <RangeShowCard/>\n                        </Grid>\n                        <Grid\n                            item\n                            className={classes.mainBlock}\n                        >\n                            <Grid\n                                item\n                                className={classes.mainSearchBlock}\n                                alignItems={\"stretch\"}\n                            >\n                                <Typography\n                                    variant={\"h2\"}\n                                    className={classes.mainSearchHeader}\n                                >\n                                    Packs list\n                                </Typography>\n                                <Search/>\n                            </Grid>\n                            <Grid\n                                item\n                                className={classes.mainTableBlock}\n                                alignItems={\"stretch\"}\n                            >\n                                <DeckTable/>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </div>\n        )\n    } else {\n        return (\n            <Redirect from={PATH.ALL_ROUTES} to=\"/login\"/>\n        )\n    }\n\n}\n","import React from 'react'\nimport {useFormik} from \"formik\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {NavLink, Redirect} from 'react-router-dom';\nimport {PATH} from \"../Routes\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {\n    FormControl,\n    FormGroup,\n    TextField,\n    Button,\n    Grid,\n    makeStyles,\n    Theme,\n    createStyles,\n    Card, Typography, Link\n} from '@material-ui/core'\nimport {registrationThunk} from \"../../m2-bll/redux/auth-reducer\";\n\n\ntype FormikErrorType = {\n    email?: string\n    password?: string\n    cfPassword?: string\n}\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        textAlign: \"center\",\n        padding: \"30px 30px\",\n        /*maxWidth: \"413px\",*/\n        width: \"413px\",\n    },\n    formTitle: {\n        marginBottom: \"30px\",\n    },\n    formSubtitle: {\n        marginBottom: \"40px\",\n    },\n    formDescription: {\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    formLinkTitle: {\n        paddingTop: \"30px\",\n        paddingBottom: \"15px\",\n    },\n\n    displayStretch: {\n        display: \"flex\",\n        alignItems: \"stretch\"\n    },\n    textFieldArea: {\n        margin: \"0px 10px\"\n    },\n    formButtonBlock: {\n        margin: \"0px 35px\",\n        display: \"flex\",\n        alignItems: \"\",\n    },\n    resetButton: {\n        flex: 1,\n        display: \"flex\",\n        alignItems: \"stretch\",\n        marginRight: \"15px\",\n    },\n    submitButton: {\n        flex: 1,\n        display: \"flex\",\n        alignItems: \"stretch\"\n    }\n}))\n\n\nconst SignupPage: React.FC = () => {\n\n\n    const classes = useStyles()\n    const dispatch = useDispatch();\n    const isFetching = useSelector<AppStoreType>(state => state.auth.isFetching);\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            cfPassword: ''\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {};\n            if (!values.email) {\n                errors.email = 'Required';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = 'Invalid email address';\n            }\n            if (!values.password) {\n                errors.password = 'Required';\n            } else if (values.password.length < 7) {\n                errors.password = 'Password must be 7 characters or more'\n            }\n            return errors;\n        },\n        onSubmit: values => {\n            // alert(JSON.stringify(values));\n            if (values.email !== '' && values.password !== '' && values.cfPassword !== '') {\n                if (values.password === values.cfPassword) {\n                    dispatch(registrationThunk(values.email, values.password))\n                    formik.resetForm();\n                }\n            }\n        },\n        // onReset: values =>  {\n        //\n        //     if (values.email !== '' || values.password !== '' || values.cfPassword !== '') {\n        //     formik.resetForm()}\n        // }\n    })\n\n    if (isFetching) {\n        return <Redirect to={PATH.LOGIN}/>\n    }\n\n    return (\n\n        <Grid container\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              style={{minHeight: '100vh'}}\n        >\n            <Grid item>\n                <Card\n                    className={classes.root}\n                >\n                    <form onSubmit={formik.handleSubmit}>\n                        <Typography\n                            variant={\"h1\"}\n                            className={classes.formTitle}\n                        >It-incubator</Typography>\n                        <Typography\n                            variant={\"h2\"}\n                            className={classes.formSubtitle}\n                        >Sign up</Typography>\n                        <FormControl className={classes.displayStretch}>\n                            <FormGroup className={classes.textFieldArea}>\n                                <TextField\n                                    type=\"email\"\n                                    label=\"Email\"\n                                    margin=\"dense\"\n                                    {...formik.getFieldProps('email')}\n                                />\n                                {formik.touched.email && formik.errors.email &&\n                                <div style={{'color': 'red'}}>{formik.errors.email}</div>}\n\n                                <TextField\n                                    type=\"password\"\n                                    label=\"Password\"\n                                    margin=\"dense\"\n                                    {...formik.getFieldProps('password')}\n                                />\n                                {formik.touched.password && formik.errors.password &&\n                                <div style={{'color': 'red'}}>{formik.errors.password}</div>}\n\n                                <TextField\n                                    type=\"password\"\n                                    label=\"Confirm password\"\n                                    margin=\"dense\"\n                                    {...formik.getFieldProps('cfPassword')}\n                                />\n                                {formik.touched.cfPassword && formik.errors.cfPassword &&\n                                <div style={{'color': 'red'}}>{formik.errors.cfPassword}</div>}\n                                <Typography\n                                    variant={\"body1\"}\n                                    className={classes.formDescription}\n                                    style={{marginTop: \"20px\", marginBottom: \"30px\"}}\n                                    align={\"left\"}\n                                >Enter your email address and password</Typography>\n\n                                <div className={classes.formButtonBlock}>\n                                    <Button\n                                        onClick={() => {\n                                            formik.resetForm()\n                                        }}\n                                        className={classes.resetButton}\n                                        type={'reset'}\n                                        variant={'outlined'}\n                                        color={'secondary'}\n                                    >Cancel</Button>\n                                    <Button\n                                        type={'submit'}\n                                        variant={'contained'}\n                                        className={classes.submitButton}\n                                        color={'primary'}\n                                    >Register</Button>\n                                </div>\n                                <Typography\n                                    variant={\"body1\"}\n                                    className={classes.formLinkTitle}\n                                    style={{marginTop: \"0px\", marginBottom: \"15px\"}}\n                                >Already have an account?</Typography>\n                                <Link\n                                    component={NavLink}\n                                    to={PATH.LOGIN}\n                                    color={\"textPrimary\"}\n                                >Log in here\n                                </Link>\n                            </FormGroup>\n                        </FormControl>\n                    </form>\n                </Card>\n            </Grid>\n        </Grid>\n    )\n}\nexport default SignupPage","import {\n    acsessAPI,\n    CardType, GetCardQueryFields,\n    GetCardQueryType,\n    GetPackQueryParamsType,\n    NewPackObjectDataType,\n    PackDataType,\n    PackResponseDataType,\n    PackUpdateObjectType,\n    PostCardFieldsType,\n    PostCardQueryType,\n    UpdateCardFieldsType,\n    UpdateCardQueryType\n} from \"../../m3-dal/Api\";\nimport {AppStatusType, setAppStatusAC, setMessageErrorAC} from \"./app-reducer\";\nimport {AnyAction, Dispatch} from \"redux\";\nimport store from '../redux/store'\n\n\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {AppStoreType} from \"./store\";\n\nexport enum ACTIONS_TYPE {\n    SET_CARDS_ARRAY = 'CardReducer/SET_CARDS_ARRAY',\n    SET_PACK_USER_ID = 'CardReducer/SET_PACK_USER_ID',\n    SET_SORT_FIELD = 'CardReducer/SET_SORT_FIELD',\n    SET_SORT_ASC = 'CardReducer/SET_SET_SORT_ASC',\n    SET_PAGE = 'CardReducer/SET_PAGE',\n    SET_PAGE_COUNT = 'CardReducer/SET_PAGE_COUNT',\n    SET_CARDS_TOTAL_COUNT = 'CardReducer/SET_CARDS_TOTAL_COUNT',\n    SET_MIN_GRADE = 'CardReducer/SET_MIN_GRADE',\n    SET_MAX_GRADE = 'CardReducer/SET_MAX_GRADE',\n}\n\nexport interface InitialCardStateType {\n    cards: Array<CardType>\n    // current Pack User id\n    packUserId: string\n    // for sort card in table\n    isSortTypeAscending: boolean\n    sortField: keyof CardType | null\n    // for pagination\n    page: number | null\n    pageCount: number | null\n    cardsTotalCount: number | null\n    // card grade\n    minGrade: number | null\n    maxGrade: number | null\n}\n\nconst initialCardState: InitialCardStateType = {\n    cards: [],\n    packUserId: '',\n    // Get card Query parameter\n    sortField: 'updated',\n    isSortTypeAscending: false,\n    page: null,\n    pageCount: 5,\n    cardsTotalCount: null,\n    minGrade: null,\n    maxGrade: null\n}\n\n\nexport const cardReducer = (state: InitialCardStateType = initialCardState, action: CombinedActionType): InitialCardStateType => {\n    /*console.log('action type', action.type)*/\n    /*console.log('action payload', action.payload)*/\n\n    switch (action.type) {\n        case ACTIONS_TYPE.SET_CARDS_ARRAY:\n        case ACTIONS_TYPE.SET_PACK_USER_ID:\n        case ACTIONS_TYPE.SET_SORT_FIELD:\n        case ACTIONS_TYPE.SET_SORT_ASC:\n        case ACTIONS_TYPE.SET_PAGE:\n        case ACTIONS_TYPE.SET_PAGE_COUNT:\n        case ACTIONS_TYPE.SET_CARDS_TOTAL_COUNT:\n        case ACTIONS_TYPE.SET_MIN_GRADE:\n        case ACTIONS_TYPE.SET_MAX_GRADE:\n            return {\n                ...state,\n                ...action.payload,\n            }\n        default:\n            return state;\n    }\n};\nexport type CombinedActionType =\n    SetCardsArrayType | SetPackUserId |\n    SetSortFieldType | SetIsSortAscType |\n    SetPageType | SetPageCountType |\n    SetCardsTotalCountType | SetMinGradeType |\n    SetMaxGradeType\n\nexport type SetCardsArrayType = ReturnType<typeof setCardsArrayAC>\nexport type SetPackUserId = ReturnType<typeof setPackUserIdAC>\nexport type SetSortFieldType = ReturnType<typeof setSortFieldAC>\nexport type SetIsSortAscType = ReturnType<typeof setSortDirectionAscAC>\nexport type SetPageType = ReturnType<typeof setPageAC>\n\nexport type SetPageCountType = ReturnType<typeof setPageCountAC>\nexport type SetCardsTotalCountType = ReturnType<typeof setCardsTotalCountAC>\nexport type SetMinGradeType = ReturnType<typeof setMinGradeAC>\nexport type SetMaxGradeType = ReturnType<typeof setMaxGradeAC>\n\nexport const setMaxGradeAC = (maxGrade: number) => ({\n    type: ACTIONS_TYPE.SET_MAX_GRADE,\n    payload: {\n        maxGrade\n    }\n})\n\nexport const setMinGradeAC = (minGrade: number) => ({\n    type: ACTIONS_TYPE.SET_MIN_GRADE,\n    payload: {\n        minGrade\n    }\n})\n\nexport const setCardsTotalCountAC = (cardsTotalCount: number) => ({\n    type: ACTIONS_TYPE.SET_CARDS_TOTAL_COUNT,\n    payload: {\n        cardsTotalCount\n    }\n})\n\nexport const setPageCountAC = (pageCount: number) => ({\n    type: ACTIONS_TYPE.SET_PAGE_COUNT,\n    payload: {\n        pageCount\n    }\n})\n\nexport const setPageAC = (page: number) => ({\n    type: ACTIONS_TYPE.SET_PAGE,\n    payload: {\n        page\n    }\n})\n\nexport const setSortDirectionAscAC = (isSortTypeAscending: boolean) => ({\n    type: ACTIONS_TYPE.SET_SORT_ASC,\n    payload: {\n        isSortTypeAscending\n    }\n})\n\nexport const setSortFieldAC = (sortField: keyof CardType) => ({\n    type: ACTIONS_TYPE.SET_SORT_FIELD,\n    payload: {\n        sortField\n    }\n})\n\nexport const setPackUserIdAC = (packUserId: string) => ({\n    type: ACTIONS_TYPE.SET_PACK_USER_ID,\n    payload: {\n        packUserId\n    }\n})\n\nexport const setCardsArrayAC = (cards: Array<CardType>) => ({\n    type: ACTIONS_TYPE.SET_CARDS_ARRAY,\n    payload: {\n        cards\n    }\n})\n\n\nexport const getAllCardsTS = (packId: string, searchFields?: GetCardQueryFields) => {\n    return (dispatch: Dispatch, getState: () => AppStoreType) => {\n        dispatch(setAppStatusAC('loading'))\n        // create sort field\n        let sortCards\n        // get query paramas from store\n        let {\n            page, pageCount, minGrade,\n            maxGrade, cardsTotalCount,\n            sortField, isSortTypeAscending\n        } = getState().card;\n\n        if (sortField) {\n            sortCards = +isSortTypeAscending + sortField;\n        }\n        // create query object\n        const cardsQueryObject: GetCardQueryType = {\n            params: {\n                cardsPack_id: packId,\n                ...(page !== null && {page}),\n                ...(pageCount !== null && {pageCount}),\n                ...(minGrade !== null && {min: minGrade}),\n                ...(maxGrade !== null && {max: maxGrade}),\n                ...(cardsTotalCount !== null && {cardsTotalCount}),\n                ...(sortCards && {sortCards}),\n                ...(searchFields && searchFields)\n            }\n        }\n        acsessAPI.getAllCards(cardsQueryObject)\n            .then(res => {\n                if (res.data && res.data.cards.length > 0) {\n                    dispatch(setCardsArrayAC(res.data.cards))\n                } else {\n                    dispatch(setCardsArrayAC([]))\n                }\n                dispatch(setPageAC(res.data.page))\n                dispatch(setPageCountAC(res.data.pageCount))\n                dispatch(setCardsTotalCountAC(res.data.cardsTotalCount))\n                dispatch(setPackUserIdAC(res.data.packUserId))\n                dispatch(setMinGradeAC(res.data.minGrade))\n                dispatch(setMaxGradeAC(res.data.maxGrade))\n                dispatch(setAppStatusAC('succeeded'))\n            })\n            .catch(error => {\n                dispatch(setAppStatusAC('failed'))\n                dispatch(setMessageErrorAC('Something went wrong'))\n            })\n    }\n}\n\nexport const deleteCardByIdTC = (id: string, packId : string ) => {\n    return (dispatch: ThunkDispatch<AppStoreType, {}, AnyAction>, getState: () => AppStoreType) => {\n        dispatch(setAppStatusAC('loading'))\n        acsessAPI.deleteCardByID(id)\n            .then(res => {\n                dispatch(setAppStatusAC('succeeded'))\n                dispatch(getAllCardsTS(packId))\n            })\n            .catch(err => {\n                console.log(err)\n                dispatch(setAppStatusAC('failed'))\n            })\n    }\n}\n\nexport const addNewCardTC = (packId: string, newCardFields: PostCardFieldsType) => {\n    return (dispatch: ThunkDispatch<AppStoreType, {}, AnyAction>, getState: () => AppStoreType) => {\n        // Combine post object from state\n        const newCardObject: PostCardQueryType = {\n            card: {\n                cardsPack_id: packId,\n                ...newCardFields\n            }\n        }\n        dispatch(setAppStatusAC('loading'))\n        acsessAPI.postCard(newCardObject)\n            .then(res => {\n                dispatch(setAppStatusAC('succeeded'));\n                dispatch(getAllCardsTS(packId));\n            })\n            .catch(err => {\n                console.log(err)\n                dispatch(setAppStatusAC('failed'))\n            })\n    }\n}\n\nexport const updateCardTC = (_id: string, packId: string ,  updatedCardFields: UpdateCardFieldsType) => {\n    return (dispatch: ThunkDispatch<AppStoreType, {}, AnyAction>, getState: () => AppStoreType) => {\n        let updatedCardQuery: UpdateCardQueryType = {\n            card: {\n                _id,\n                ...updatedCardFields\n            }\n        }\n        dispatch(setAppStatusAC('loading'))\n        acsessAPI.updateCardById(updatedCardQuery)\n            .then(res => {\n                dispatch(setAppStatusAC('succeeded'))\n                dispatch(getAllCardsTS(packId))\n            })\n            .catch(err => {\n                console.log(err)\n                dispatch(setAppStatusAC('failed'))\n            })\n    }\n}\n","import React from \"react\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {CardType, PackDataType} from \"../../../m3-dal/Api\";\nimport {useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../../m2-bll/redux/store\";\n\ninterface Data {\n    calories: number;\n    carbs: number;\n    fat: number;\n    name: string;\n    protein: number;\n}\n\nexport function descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n    order: Order,\n    orderBy: Key,\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\ninterface HeadCell {\n    disablePadding: boolean;\n    id: keyof CardType;\n    label: string;\n    numeric: boolean;\n}\n\nconst headCells: HeadCell[] = [\n    {id: 'question', numeric: false, disablePadding: false, label: 'Question'},\n    {id: 'answer', numeric: false, disablePadding: false, label: 'Answer'},\n    {id: 'updated', numeric: true, disablePadding: false, label: 'Last updated'},\n    {id: 'grade', numeric: true, disablePadding: false, label: 'Grade'},\n];\n\ninterface CardTableHeaderPropsType {\n    numSelected: number;\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof CardType) => void;\n    onSelectAllClick?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    rowCount: number;\n    packUserId: string\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        paper: {\n            width: '100%',\n            marginBottom: theme.spacing(2),\n        },\n        table: {\n            minWidth: 750,\n        },\n        visuallyHidden: {\n            border: 0,\n            clip: 'rect(0 0 0 0)',\n            height: 1,\n            margin: -1,\n            overflow: 'hidden',\n            padding: 0,\n            position: 'absolute',\n            top: 20,\n            width: 1,\n        },\n    }),\n);\n\n\nconst CardTableHeader: React.FC<CardTableHeaderPropsType> = (props) => {\n    const classes = useStyles()\n    const {numSelected, rowCount, onRequestSort} = props;\n    const createSortHandler = (property: keyof CardType) => (event: React.MouseEvent<unknown>) => {\n        onRequestSort(event, property);\n    };\n    const {_id} = useSelector((state: AppStoreType) => state.auth)\n    const {sortField, isSortTypeAscending} = useSelector((state: AppStoreType) => state.pack)\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\n                        sortDirection={isSortTypeAscending ? 'asc' : 'desc'}\n                    >\n                        <TableSortLabel\n                            active={sortField === headCell.id}\n                            direction={isSortTypeAscending ? 'asc' : 'desc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {sortField === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                            {isSortTypeAscending ? 'sorted descending' : 'sorted ascending'}\n                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n                {\n                    props.packUserId === _id &&\n                        (\n                            <TableCell\n                                align={'right'}\n                            >Action</TableCell>\n                        )\n                }\n\n            </TableRow>\n        </TableHead>\n    );\n}\n\nexport default CardTableHeader","import React, {useState} from 'react'\nimport TableCell from \"@material-ui/core/TableCell\";\nimport moment from \"moment\";\nimport {Button, createStyles} from \"@material-ui/core\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport {CardType, UpdateCardFieldsType} from \"../../../m3-dal/Api\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../../m2-bll/redux/store\";\nimport ModalForm from \"../../common/c9-Modal/ModalForm\";\nimport {deleteCardByIdTC, updateCardTC} from \"../../../m2-bll/redux/card-reducer\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {setFlagsFromString} from \"v8\";\nimport {updateCardPack} from \"../../../m2-bll/redux/pack-reducer\";\nimport {setAppErrorAC} from \"../../../m2-bll/redux/app-reducer\";\nimport {Rating} from \"@material-ui/lab\";\n\nexport interface CardTableRowPropsType {\n    card: CardType\n    labelId: string\n    packId: string\n    closeAfterAction?: boolean\n}\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {},\n        tableRow: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.action.hover,\n            },\n        },\n    })\n)\n\n\nconst CardTableRow: React.FC<CardTableRowPropsType> = (props) => {\n    const {card, labelId, packId} = props;\n    const classes = useStyles();\n    const {_id} = useSelector((state: AppStoreType) => state.auth)\n    const dispatch = useDispatch()\n    const [modalDeleteStatus, setModalDeleteStatus] = useState(false)\n    const [modalEditStatus, setModalEditStatus] = useState(false)\n\n    const [question, setQuestion] = useState<string | null>(null)\n    const [answer, setAnswer] = useState<string | null>(null)\n\n    const handleDeleteCard = (cardId: string, packId: string) => {\n        if (cardId) {\n            dispatch(deleteCardByIdTC(cardId, packId))\n        }\n    }\n    const handleEditCard = (cardId: string) => {\n        /*if (!(question && answer)) {\n            dispatch(setAppErrorAC('Please provide Question and answer'))\n            return\n        }*/\n        const cardUpdateCard: UpdateCardFieldsType = {\n            ...(question && {question}),\n            ...(answer && {answer}),\n        }\n        dispatch(updateCardTC(cardId, packId, cardUpdateCard))\n        setAnswer(null)\n        setQuestion(null)\n    }\n    const handleQuestionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setQuestion(event.target.value)\n    }\n    const handleAnswerChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setAnswer(event.target.value)\n    }\n\n    return (\n        <TableRow\n            /*hover*/\n            /*onClick={(event) => handleClick(event, pack.name)}*/\n            role=\"checkbox\"\n            /*aria-checked={isItemSelected}*/\n            tabIndex={-1}\n            /*selected={isItemSelected}*/\n            className={classes.tableRow}\n        >\n            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"normal\">\n                {card.question.length > 20 ? card.question.slice(0, 20) + '...' : card.question}\n            </TableCell>\n            <TableCell align=\"left\">\n                {card.answer.length > 20 ? card.answer.slice(0, 20) + '...' : card.answer}\n            </TableCell>\n            <TableCell\n                align=\"right\">{moment(card.updated).format(\"DD.MM.YYYY\")}\n            </TableCell>\n            <TableCell align=\"right\">\n                <Rating name=\"read-only\" value={card.grade} readOnly/>\n            </TableCell>\n            {\n                card.user_id === _id &&\n                <TableCell align={\"right\"}>\n                    <Button\n                        onClick={() => {\n                            setModalDeleteStatus(true)\n                        }}>Delete</Button>\n                    <Button\n                        onClick={() => {\n                            setModalEditStatus(true)\n                        }}>Edit</Button>\n                    <ModalForm\n                        modalTitle={\"Delete Card\"}\n                        modalText={\"Do you really want to delete card\"}\n                        openStatus={modalDeleteStatus}\n                        handleCloseModal={setModalDeleteStatus}\n                        modalActionCallback={() => {\n                            handleDeleteCard(card._id, packId)\n                        }}\n                        actionButtonTitle={\"Delete\"}\n                    />\n                    <ModalForm\n                        modalTitle={\"Edit Pack\"}\n                        actionButtonTitle={\"Edit\"}\n                        openStatus={modalEditStatus}\n                        handleCloseModal={setModalEditStatus}\n                        modalActionCallback={() => {\n                            handleEditCard(card._id)\n                        }}\n                    >\n                        <>\n                            <TextField\n                                value={question === null ? card.question : question}\n                                onChange={handleQuestionChange}\n                                margin=\"dense\"\n                                id=\"question\"\n                                label=\"Question\"\n                                type=\"string\"\n                                fullWidth\n                            />\n                            <TextField\n                                value={answer === null ? card.answer : answer}\n                                onChange={handleAnswerChange}\n                                margin=\"dense\"\n                                id=\"answer\"\n                                label=\"Answer\"\n                                type=\"string\"\n                                fullWidth\n                            />\n                        </>\n                    </ModalForm>\n                </TableCell>\n            }\n        </TableRow>\n    )\n\n}\n\nexport default CardTableRow\n","import React, {useEffect} from 'react';\nimport {createStyles, lighten, makeStyles, Theme} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport moment from 'moment'\nimport {\n    getAllCardsTS,\n    setPageAC,\n    setPageCountAC,\n    setSortDirectionAscAC,\n    setSortFieldAC\n} from '../../../m2-bll/redux/card-reducer';\nimport {AppStoreType} from '../../../m2-bll/redux/store';\nimport {CardType} from \"../../../m3-dal/Api\";\nimport {useParams} from \"react-router-dom\";\nimport CardTableHeader from './CardTableHeader';\nimport {Button, TablePagination} from \"@material-ui/core\";\nimport {deletePackByIdTC} from \"../../../m2-bll/redux/pack-reducer\";\nimport CardTableRow from \"./CardTableRow\";\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n    order: Order,\n    orderBy: Key,\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n/*function stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}*/\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        paper: {\n            width: '100%',\n            marginBottom: theme.spacing(2),\n        },\n        table: {\n            minWidth: 750,\n        },\n        tableRow: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.action.hover,\n            },\n        },\n        visuallyHidden: {\n            border: 0,\n            clip: 'rect(0 0 0 0)',\n            height: 1,\n            margin: -1,\n            overflow: 'hidden',\n            padding: 0,\n            position: 'absolute',\n            top: 20,\n            width: 1,\n        },\n    }),\n);\n\nconst CardTable: React.FC = () => {\n    const classes = useStyles();\n    const [selected, setSelected] = React.useState<string[]>([]);\n    const {packId} = useParams<{ packId: string }>()\n\n    const {card} = useSelector((state: AppStoreType) => state)\n    const dispatch = useDispatch()\n\n\n    const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof CardType) => {\n        dispatch(setSortDirectionAscAC(!card.isSortTypeAscending))\n        dispatch(setSortFieldAC(property))\n    };\n\n    useEffect(() => {\n            dispatch(getAllCardsTS(packId))\n        }, [\n            dispatch\n            /*card.isSortTypeAscending, card.sortField,\n            card.page, card.pageCount, card.page*/\n        ]\n    )\n\n\n    const handleChangePage = (event: unknown, newPage: number) => {\n        dispatch(setPageAC(newPage + 1));\n    };\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(setPageCountAC(parseInt(event.target.value, 10)))\n        /*setPage(0);*/\n    };\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        /*size={dense ? 'small' : 'medium'}*/\n                        size={'small'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <CardTableHeader\n                            numSelected={selected.length}\n                            /*onSelectAllClick={handleSelectAllClick}*/\n                            onRequestSort={handleRequestSort}\n                            rowCount={card.cardsTotalCount || 0}\n                            packUserId={card.packUserId}\n                        />\n                        <TableBody>\n                            {\n                                card.cards.length > 0 && card.cards\n                                    .map((card, index) => {\n                                            const labelId = `enhanced-table-checkbox-${index}`;\n                                            return (\n                                                <CardTableRow\n                                                    key={card._id}\n                                                    card={card}\n                                                    labelId={labelId}\n                                                    packId={packId}\n                                                />\n                                            );\n                                        }\n                                    )\n                            }\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 15]}\n                    component=\"div\"\n                    // total number of rows from server side\n                    count={card.cardsTotalCount || 0}\n                    // rows per page\n                    rowsPerPage={card.pageCount || 5}\n                    // current page(starts from 0) from server side - 1\n                    page={(card.page && (card.page - 1)) || 0}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n}\nexport default CardTable","import React, {KeyboardEventHandler, useState} from 'react';\nimport {makeStyles, createStyles, Theme} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addNewPackTC, setPackNameAC} from \"../../../m2-bll/redux/pack-reducer\";\nimport {NewPackFieldsType, NewPackObjectDataType, PostCardFieldsType} from \"../../../m3-dal/Api\";\nimport {addNewCardTC, getAllCardsTS} from \"../../../m2-bll/redux/card-reducer\";\nimport {AppStoreType} from \"../../../m2-bll/redux/store\";\nimport ModalForm from \"../../common/c9-Modal/ModalForm\";\nimport {setAppErrorAC} from \"../../../m2-bll/redux/app-reducer\";\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        rootGrid: {\n            flexGrow: 1,\n        },\n        search: {\n            display: \"flex\",\n            alignItems: \"stretch\",\n            /*marginRight: 40,*/\n            backgroundColor: \"#e2dfef\"\n        },\n        searchInputBlock: {\n            flexGrow: 3,\n        },\n        addDeckBlock: {\n            marginLeft: \"20px\",\n        }\n    }),\n);\n\nexport interface SearchCardPropsType {\n    packId: string\n}\n\nconst SearchCard: React.FC<SearchCardPropsType> = (props) => {\n    const classes = useStyles();\n    const dispatch = useDispatch()\n    const {packUserId} = useSelector((state: AppStoreType) => state.card)\n    const [search, setSearch] = React.useState<string>('');\n    const {_id} = useSelector((state: AppStoreType) => state.auth);\n    const [modalAddStatus, setModalCardStatus] = useState<boolean>(false);\n    const [answer, setAnswer] = useState<string | null>(null);\n    const [question, setQuestion] = useState<string | null>(null);\n\n    const inputHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setSearch(event.target.value);\n    };\n\n    const onChangeAnswer = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setAnswer(event.target.value)\n    }\n    const onChangeQuestion = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setQuestion(event.target.value)\n    }\n\n    const handleAddCard = () => {\n        // Create new Card object from local state\n        const newCardObject: PostCardFieldsType = {\n            ...(question !== null && {question}),\n            ...(answer !== null && {answer}),\n        }\n        if (question && answer) {\n            dispatch(addNewCardTC(props.packId, newCardObject))\n            setQuestion(null)\n            setAnswer(null)\n        } else {\n            dispatch(setAppErrorAC(\"Please provide answer and question\"))\n        }\n    }\n\n    return (\n        <div\n            className={classes.rootGrid}\n        >\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"flex-start\"\n                alignItems=\"stretch\"\n            >\n                <Grid\n                    item\n                    className={classes.searchInputBlock}\n                >\n                    <TextField\n                        size={\"small\"}\n                        className={classes.search}\n                        style={{backgroundColor: \"#ECECF9\"}}\n                        label=\"Search\"\n                        placeholder=\"Input list name\"\n                        variant=\"outlined\"\n                        onChange={inputHandleChange}\n                        /*onKeyDown={handlePressEnter}*/\n                        onKeyUp={(event) => {\n                            console.log('Event', event)\n                            if (event.key === 'Enter') {\n                                /*if (!search) {\n                                    dispatch(getAllCardsTS(props.packId, { cardQuestion : search}))\n                                }*/\n                                dispatch(getAllCardsTS(props.packId, {cardQuestion: search}))\n                                setSearch('');\n                            }\n                        }}\n                    />\n                </Grid>\n                {\n                    packUserId === _id &&\n                    <Grid\n                        item\n                        className={classes.addDeckBlock}\n                    >\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                                setModalCardStatus(true)\n                            }}\n                        >\n                            Add new pack\n                        </Button>\n                    </Grid>\n                }\n            </Grid>\n            <ModalForm\n                modalTitle={\"Add Card\"}\n                modalText={\"Please specify answer and question\"}\n                openStatus={modalAddStatus}\n                handleCloseModal={setModalCardStatus}\n                modalActionCallback={() => {\n                    handleAddCard()\n                }}\n                actionButtonTitle={\"Add pack\"}\n            >\n                <div>\n                    <TextField\n                        value={answer}\n                        onChange={onChangeAnswer}\n                        margin=\"dense\"\n                        id=\"answer\"\n                        label=\"Answer\"\n                        type=\"string\"\n                        fullWidth\n                    />\n                    <TextField\n                        value={question}\n                        onChange={onChangeQuestion}\n                        margin=\"dense\"\n                        id=\"question\"\n                        label=\"Question\"\n                        type=\"string\"\n                        fullWidth\n                    />\n                </div>\n            </ModalForm>\n        </div>\n    );\n}\n\nexport default SearchCard","import React, {useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Button, IconButton, Paper} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardTable from \"./CardTable\";\nimport SearchCard from './SearchCard';\nimport {Redirect, useHistory, useParams} from \"react-router-dom\";\nimport {PATH} from \"../../Routes\";\nimport {ArrowBackIos} from \"@material-ui/icons\";\nimport {useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../../m2-bll/redux/store\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: \"40px\",\n        marginBottom: \"40px\",\n        maxWidth: 1200,\n        margin: 'auto',\n    },\n    paper: {\n        padding: '25px',\n    },\n\n    mainBlock: {\n        width: \"fit-content\",\n        margin: \"30px\",\n        boxSizing: \"border-box\",\n    },\n    mainSearchBlock: {\n        marginBottom: \"20px\",\n    },\n    mainSearchHeader: {\n        marginBottom: \"20px\",\n    },\n    mainTableBlock: {\n        /*maxWidth: \"500px\",*/\n    }\n}));\n\nconst CardPage: React.FC = () => {\n    const classes = useStyles();\n    const {packId} = useParams<{ packId: string }>()\n    const history = useHistory()\n    const {cardPacks} = useSelector((state: AppStoreType) => state.pack)\n\n    const packName = () => {\n        if (cardPacks.length > 0 && packId) {\n            const packObjectFromState = cardPacks.find(pack => pack._id === packId)\n            const getObjectName: string | undefined = packObjectFromState?.name;\n            if (getObjectName) {\n                return getObjectName?.length > 20 ? getObjectName.slice(0, 20) + '...' : getObjectName\n            }\n        }\n    }\n\n\n    return (\n        <div className={classes.root}>\n            <Paper\n                elevation={4}\n                className={classes.paper}\n                square={false}\n            >\n                <Grid\n                    container\n                    direction=\"column\"\n                    justifyContent=\"flex-start\"\n                    alignItems=\"stretch\"\n                >\n\n                    <Grid\n                        item\n                        className={classes.mainSearchBlock}\n                        alignItems={\"stretch\"}\n                    >\n                        {/*<Button\n                            color=\"inherit\"\n                            style={{ display  : \"inline-block\"}}\n                            onClick={() => <Redirect to={PATH.TEST_PAGE}/>}>\n                            Back</Button>*/}\n\n                        <Typography\n                            variant={\"h2\"}\n                            className={classes.mainSearchHeader}\n                        >\n                            <IconButton\n                                onClick={() => {\n                                    history.push(PATH.PACK)\n                                }}\n                            >\n                                <ArrowBackIos/>\n                            </IconButton>\n                            {(packName && packName()) || 'PackName'}\n                        </Typography>\n                        <SearchCard packId={packId}/>\n                    </Grid>\n                    <Grid\n                        item\n                        className={classes.mainTableBlock}\n                    >\n                        <CardTable/>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </div>\n    );\n}\n\nexport default CardPage","import React, {ChangeEvent, useRef, useState} from 'react';\n\n\n\nconst YoutubeVideo: React.FC = () => {\n\n\n\n\n     return (\n        <div style={{display: \"flex\"}} >\n\n            <iframe\n                width=\"560\"\n                height=\"315\"\n                src=\"https://www.youtube.com/embed/1P2ov_oidRQ\"\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n            />\n\n\n        </div>\n    );\n};\n\nexport default YoutubeVideo;\n","import React, {useEffect, useRef, useState} from 'react';\n\ninterface IFileInputProps {\n    fileURL: string;\n}\n\nconst Video: React.FC<IFileInputProps> = ({fileURL}) => {\n    const videoRef = useRef<HTMLVideoElement>(null);\n\n    const [duration, setDuration] = useState<any>();\n    const [controls, setControls] = useState(false);\n    const [currentTime, setCurrentTime] = useState<any>();\n\n    useEffect(() => {\n        setInterval(() => {\n            setDuration(videoRef && videoRef.current && videoRef.current.duration);\n            if (videoRef && videoRef.current && videoRef.current.currentTime === videoRef.current.duration) {\n                videoRef.current.currentTime = 0;\n                videoRef.current.play();\n            }\n            setCurrentTime(videoRef && videoRef.current && videoRef.current.currentTime);\n        }, 300);\n    }, []);\n\n    const makeFullScreen = () => {\n        if (videoRef && videoRef.current)\n            if (videoRef.current.requestFullscreen) {\n                videoRef.current.requestFullscreen();\n            } else {\n                console.log(\"Fullscreen API is not supported\");\n            }\n    };\n\n    // videoRef.current!.height\n\n    const play = () => videoRef && videoRef.current && videoRef.current.play();\n    const pause = () => videoRef && videoRef.current && videoRef.current.pause();\n    const volumeUp = () => {\n        if (videoRef && videoRef.current && videoRef.current.volume < 0.9) videoRef.current.volume += 0.1;\n        else videoRef && videoRef.current && (videoRef.current.volume = 1);\n    };\n    const volumeDown = () => {\n        if (videoRef && videoRef.current && videoRef.current.volume > 0.1) videoRef.current.volume -= 0.1;\n        else videoRef && videoRef.current && (videoRef.current.volume = 0);\n    };\n    const currentTimeUp = () => {\n        if (videoRef && videoRef.current\n            && videoRef.current.currentTime < videoRef.current.duration - 0.3) videoRef.current.currentTime += 0.3;\n        else videoRef && videoRef.current && (videoRef.current.currentTime = videoRef.current.duration);\n    };\n    const currentTimeDown = () => {\n        if (videoRef && videoRef.current\n            && videoRef.current.currentTime > 0.3) videoRef.current.currentTime -= 0.3;\n        else videoRef && videoRef.current && (videoRef.current.currentTime = 0);\n    };\n    const playbackRateUp = () => {\n        if (videoRef && videoRef.current\n            && videoRef.current.playbackRate < 100) videoRef.current.playbackRate += 0.1;\n        else videoRef && videoRef.current && (videoRef.current.playbackRate = 100);\n    };\n    const playbackRateDown = () => {\n        if (videoRef && videoRef.current\n            && videoRef.current.playbackRate > 0.2) videoRef.current.playbackRate -= 0.1;\n        else videoRef && videoRef.current && (videoRef.current.playbackRate = 0.2);\n    };\n    const stop = () => {\n        videoRef && videoRef.current && videoRef.current.pause();\n        videoRef && videoRef.current && (videoRef.current.currentTime = 0);\n    };\n    const width100 = () => {\n        videoRef && videoRef.current && (videoRef.current.width = 100);\n    };\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexFlow: 'column',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }}\n        >\n            Video\n            <label>\n                controls\n                <input type={'checkbox'} checked={controls} onChange={e => setControls(e.currentTarget.checked)}/>\n            </label>\n\n            <video\n                src={fileURL}\n                width={'300px'}\n                controls={controls}\n                ref={videoRef}\n            />\n            <div>\n                <button onClick={play}>play</button>\n                <button onClick={pause}>pause</button>\n                <button onClick={makeFullScreen}>makeFullScreen</button>\n                <button onClick={volumeUp}>volumeUp</button>\n                <button onClick={volumeDown}>volumeDown</button>\n                <button onClick={currentTimeUp}>currentTimeUp</button>\n                <button onClick={currentTimeDown}>currentTimeDown</button>\n                <button onClick={stop}>stop</button>\n                <button onClick={playbackRateUp}>playbackRateUp</button>\n                <button onClick={playbackRateDown}>playbackRateDown</button>\n                <button onClick={width100}>width100</button>\n            </div>\n            duration: {duration} currentTime: {currentTime}\n            <hr style={{width: '100%'}}/>\n\n\n        </div>\n    );\n};\n\nexport default Video;\n","import React, {ChangeEvent, useRef, useState} from 'react';\nimport VideoPlayer from \"./VideoPlayer\";\nimport {Button} from \"@material-ui/core\";\n\n\n\nconst VideoPage: React.FC = () => {\n\n    const buttonRef=useRef<HTMLInputElement>(null)\n\n    const [fileURL,setFileURL]=useState<any>({})\n\n    const upLoad=(e:ChangeEvent<HTMLInputElement>)=>{\n        const newFile= e.target.files && e.target.files[0]\n\n        if (newFile){\n            setFileURL(window.URL.createObjectURL(newFile))\n        }\n    }\n\n\n    return (\n        <div>\n\n            <VideoPlayer fileURL={fileURL}/>\n\n\n            <div>\n                <input type=\"file\"\n                       ref={buttonRef}\n                       accept=\".mp4, .avi\"\n                       multiple\n                       onChange={upLoad}\n                       style={{display:\"none\"}}\n                />\n                <Button\n                    type={'reset'}\n                    onClick={() => buttonRef && buttonRef.current && buttonRef.current.click() }\n                    variant={'contained'}\n                    color={'primary'}>\n                    Upload\n                </Button>\n            </div>\n\n\n        </div>\n    );\n};\n\nexport default VideoPage;\n","import React from 'react'\nimport {Switch, Route} from 'react-router-dom'\nimport YoutubeVideo from '../VideoPage/YoutubeVideo'\nimport MyVideo from \"./MyVideo\";\n\n\nexport const PATH = {\n    MY_VIDEO: '/video/myVideo',\n    YOUTUBE_VIDEO: '/video/youtubeVideo',\n}\n\nconst  FilesRoutes : React.FC = ()  => {\n\n\n    return (\n        <div>\n            <Switch>\n                <Route path={PATH.MY_VIDEO} exact render={() => <MyVideo/>}/>\n                <Route path={PATH.YOUTUBE_VIDEO} exact render={() => <YoutubeVideo/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default FilesRoutes\n","import React from 'react'\nimport {NavLink, useHistory, useParams} from 'react-router-dom'\nimport {PATH} from \"../VideoPage/VideoRoutes\";\nimport {AppBar, Button, createStyles, makeStyles, Theme, Toolbar} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        backgroundColor: \"#EBE0E9\",\n\n    },\n    listBlock : {\n        display : \"flex\",\n        flexDirection: \"row\"\n    },\n    iconBlock : {\n    },\n    menuItem: {\n        color: \"#2D2E46\",\n    }\n}))\n\nconst VideoHeader: React.FC = () => {\n    const history = useHistory()\n    const classes = useStyles()\n\n    return (\n        <div>\n            <AppBar\n                position=\"static\"\n                className={classes.root}\n            >\n                <Toolbar>\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.MY_VIDEO)}\n                        >My Video</Button>\n\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.YOUTUBE_VIDEO)}\n                        >YOUTUBE video</Button>\n                </Toolbar>\n            </AppBar>\n\n        </div>\n    )\n}\n\nexport default VideoHeader\n","import React from 'react';\n\nimport VideoRoutes from './VideoRoutes';\nimport VideoHeader from \"./VideoHeader\";\n\n\nfunction App() {\n\n      return (\n          <div >\n              <h3 style={{display: \"flex\", justifyContent: \"flex-end\", width: 500}}>video collection</h3>\n              <VideoHeader/>\n              <VideoRoutes/>\n          </div>\n      );\n}\n\nexport default App;\n","import React, {ChangeEvent, useRef, useState} from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Theme, createStyles, makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Button} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        paper1:{\n            width: \"auto\",\n            height: 200,\n            display: 'flex',\n        },\n        paper2:{\n            width: 400,\n            height: 200,\n            display: 'flex',\n        },\n    }),\n);\n\n\ninterface IFileInputProps {\n}\n\nconst ReadFiles: React.FC<IFileInputProps> = () => {\n\n\n    const classes = useStyles();\n\n    const buttonRef=useRef<HTMLInputElement>(null)\n\n    const [file64, setFile64] = useState<string>();\n    const [existFile, setExistFile] = useState<string>(\"copyRight\");\n\n    const upload = (e: ChangeEvent<HTMLInputElement>) => {\n        // e.preventDefault();\n        const reader = new FileReader();\n\n        const newFile = e.target.files && e.target.files[0];\n\n        if (newFile) {\n            reader.onloadend = () => {\n                setFile64(reader.result+\"\"); // transformation to string (same String(value))\n            };\n            reader.readAsText(newFile)\n        }\n    };\n\n    const writeFile = (fileName: string, value: string) => {\n        const link = document.createElement(\"a\");\n        link.href = \"data:text/plain;content-disposition=attachment;filename=file,\" + value;\n        link.download = fileName;\n        link.style.display = \"none\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    };\n\n    return (\n        <div style={{display: \"flex\"}} >\n\n                <Grid\n                    className={classes.root}\n                    container\n                    direction=\"column\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                >\n                    <div>\n                        <h3>Upload file and edit and save</h3>\n                        <input\n                            ref={buttonRef}\n                            type={'file'}\n                            accept=\".txt\" multiple\n                            onChange={upload}\n                            style={{display:\"none\"}}\n                        />\n                        <Button\n                            type={'reset'}\n                            onClick={() => buttonRef && buttonRef.current && buttonRef.current.click() }\n                            variant={'contained'}\n                            color={'primary'}>\n                            upload\n                        </Button>\n                        <Button\n                            type={'reset'}\n                            onClick={() => writeFile('Text.txt', file64 + `\\r\\n` + existFile) }\n                            variant={'contained'}\n                            color={'primary'}>\n                            Save\n                        </Button>\n                    </div>\n                    <div>\n                        <Paper className={classes.paper2} elevation={3}>\n                                <textarea style={{width: 600}} value={file64} onChange={e => setFile64(e.currentTarget.value)}/>\n                            {/*<pre>{file64}</pre>*/}\n\n                        </Paper>\n                    </div>\n                </Grid>\n                <br/>\n        </div>\n    );\n};\n\nexport default ReadFiles;\n","import React, {useEffect, useState} from 'react'\nimport {NavLink, useParams} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Button, Paper, Typography} from \"@material-ui/core\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAllCardsTS} from \"../../../m2-bll/redux/card-reducer\";\nimport {AppStoreType} from \"../../../m2-bll/redux/store\";\nimport {PATH} from \"../../Routes\";\nimport {useSpring, a} from '@react-spring/web'\nimport styles from \"./styles.module.css\";\n\n\nconst useStyles = makeStyles(() => ({\n        root: {\n            marginTop: \"60px\",\n            marginBottom: \"40px\",\n            minWidth: 350,\n        },\n        paper: {\n            position: \"absolute\",\n            /*max-width: 500px;\n            max-height: 500px;*/\n            width: \"350px\",\n            height: \"200px\",\n            cursor: \"pointer\",\n            willChange: \"transform, opacity\",\n            /*will-change: transform, opacity;*/\n            margin: '0px auto',\n            /*maxWidth: 500,\n            padding: \"30px\",*/\n        },\n        /*.front,\n        .back {\n        background-size: cover;\n        }*/\n        front: {backgroundSize: \"cover\"},\n        back: {backgroundSize: \"cover\"},\n        buttonBlock: {}\n    })\n)\n\ninterface FrontPagePropsType {\n    setFlipped: (state: boolean) => void\n}\n\nconst FrontPage: React.FC<FrontPagePropsType> = (props) => {\n    return (\n        <div style={{\n            width: \"300px\",\n            height: \"300px\",\n            /*position : \"absolute\",*/\n        }}>\n            <h1>Front Page</h1>\n            <Button onClick={() => props.setFlipped(true)}>Flipp</Button>\n        </div>\n    )\n}\n\ninterface BackPagePropsType {\n    setFlipped: (state: boolean) => void\n}\n\nconst BackPage: React.FC<BackPagePropsType> = (props) => {\n    return (\n        <div style={{\n            width: \"300px\",\n            height: \"300px\",\n            /*position : \"absolute\",*/\n        }}>\n            <h1>Back Page</h1>\n            <Button onClick={() => props.setFlipped(false)}>Flipp</Button>\n        </div>\n    )\n}\n\nconst LearnPage = () => {\n    const classes = useStyles();\n    const {packId} = useParams<{ packId: string }>();\n    const dispatch = useDispatch();\n    const [flipped, setFlipped] = useState(false)\n    const {cards} = useSelector((state: AppStoreType) => state.card)\n    const pack = useSelector((state: AppStoreType) => state.pack.cardPacks.find(pack => pack._id === packId))\n    const [cardToLearn, setCardToLearn] = useState<number>(0)\n\n\n    const handleFlip = () => {\n        alert(\"Flip\");\n        setFlipped((state) => !state)\n\n    }\n\n    useEffect(() => {\n        if (packId) {\n            dispatch(getAllCardsTS(packId))\n        }\n    }, [])\n\n\n    const {transform, opacity} = useSpring({\n        opacity: flipped ? 1 : 0,\n        transform: `perspective(300px) rotateX(${flipped ? 180 : 0}deg)`,\n        config: {mass: 5, tension: 500, friction: 80},\n    })\n\n    return (\n        <div\n            /*className={classes.root}*/\n            style={{\n                position: \"relative\",\n                /*backgroundColor: \"green\",*/\n                margin: \"0px auto\",\n                marginTop: \"20px\",\n                width: \"100%\",\n                height: \"500px\",\n            }}\n        >\n            <div\n                className={styles.container}\n                /*onClick={() => setFlipped(state => !state)}*/\n            >\n                <a.div\n                    className={`${styles.c} ${styles.back}`}\n                    style={{opacity: opacity.to(o => 1 - o), transform}}\n                >\n                    <Paper\n                        elevation={4}\n                        square={false}\n                    >\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"flex-start\"\n                            alignItems=\"stretch\"\n                        >\n                            <Grid\n                                item\n                            >\n                                <Typography variant={\"h1\"}>\n                                    {pack && pack.name}\n                                </Typography>\n                                {cards.length > 0 &&\n                                <Typography variant={\"body1\"}>{cards[cardToLearn].question}</Typography>}\n                                <div className={classes.buttonBlock}>\n                                    <Button\n                                        type={'reset'}\n                                        variant={'contained'}\n                                        color={'primary'}\n                                        component={NavLink}\n                                        to={PATH.PACK}\n                                    >\n                                        Cancel\n                                    </Button>\n                                    <Button\n                                        type={'submit'}\n                                        variant={'contained'}\n                                        onClick={handleFlip}\n                                        color={'primary'}>\n                                        Show answer\n                                    </Button>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </a.div>\n                <a.div\n                    className={`${styles.c} ${styles.front}`}\n                    style={{\n                        opacity,\n                        transform,\n                        rotateX: '180deg',\n                    }}\n                >\n                    <Paper\n                        elevation={4}\n                        square={false}\n                    >\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"flex-start\"\n                            alignItems=\"stretch\"\n                        >\n                            <Grid\n                                item\n                            >\n                                <Typography variant={\"h1\"}>\n                                    {pack && pack.name}\n                                </Typography>\n                                <Button\n                                    type={'submit'}\n                                    variant={'contained'}\n                                    onClick={handleFlip}\n                                    color={'primary'}>\n                                    Flip\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </a.div>\n            </div>\n        </div>\n    )\n}\n\nexport default LearnPage","import React, {useState} from 'react'\nimport {useSpring, a} from '@react-spring/web'\n\nimport styles from './styles.module.css'\n\nexport default function FlipPage() {\n    const [flipped, set] = useState(false)\n    const {transform, opacity} = useSpring({\n        opacity: flipped ? 1 : 0,\n        transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\n        config: {mass: 5, tension: 500, friction: 80},\n    })\n    return (\n        <div\n            style={{\n            position: \"relative\",\n            /*backgroundColor: \"green\",*/\n            margin: \"0px auto\",\n            marginTop: \"20px\",\n            width: \"100%\",\n            height: \"500px\",\n        }}\n        >\n            <div className={styles.container} onClick={() => set(state => !state)}>\n                <a.div\n                    className={`${styles.c} ${styles.back}`}\n                    style={{opacity: opacity.to(o => 1 - o), transform}}\n                />\n                <a.div\n                    className={`${styles.c} ${styles.front}`}\n                    style={{\n                        opacity,\n                        transform,\n                        rotateX: '180deg',\n                    }}\n                />\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport SuperInputText from \"../common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"../common/c3-SuperCheckbox/SuperCheckbox\";\nimport SuperEditableSpan from \"../common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperSelect from \"../common/c5-SuperSelect/SuperSelect\";\nimport SuperRadio from \"../common/c6-SuperRadio/SuperRadio\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {loggedInAC} from \"../../m2-bll/redux/auth-reducer\";\nimport FlipPage from \"./Pack/FlipPage\";\n\nconst TestPage: React.FC = () => {\n    const isLoggedIn = useSelector((state: AppStoreType) => (state.auth.isLoggedIn))\n    const dispatch = useDispatch();\n    const handleTestButton = () => {\n        dispatch(loggedInAC(!isLoggedIn, \"error from\"))\n    }\n    console.log(isLoggedIn)\n    return (\n        <>\n            <div\n                style={{\n                    /*top: \"100px\",\n                    left: \"200px\",*/\n                }}\n            >\n                <FlipPage/>\n            </div>\n\n            {/*<h1>Test page</h1>\n            <p>Is Logged In : {isLoggedIn ? <span>True</span> : <span>False</span>}</p>\n            <SuperInputText/>\n            <br/>\n            <SuperButton onClick={handleTestButton}>Test button</SuperButton>\n            <div>\n                <SuperCheckbox>Some checkbox 1</SuperCheckbox>\n                <SuperCheckbox checked={true}>Some checkbox 1</SuperCheckbox>\n                <SuperCheckbox checked={false}>Some checkbox 2</SuperCheckbox>\n            </div>\n            <SuperEditableSpan></SuperEditableSpan>\n            <SuperSelect></SuperSelect>\n            <SuperRadio options={[\"options1\", \"options2\"]}></SuperRadio>*/}\n        </>\n    )\n}\nexport default TestPage\n","import React from 'react'\nimport {Redirect, Switch, Route} from 'react-router-dom'\nimport LoginPage from './Pages/LoginPage'\nimport ProfilePage from \"./Pages/ProfilePage\";\nimport NotFoundPage from \"./Pages/NotFoundPage\";\nimport RestorePassPage from \"./Pages/RestorePassPage\";\nimport NewPassPage from \"./Pages/NewPassPage\";\nimport RestorePassCheckEmailPage from \"./Pages/RestorePassCheckEmailPage\";\n\nimport Packs from \"./Pages/Pack/Packs\";\nimport SignupPage from \"./Pages/SignupPage\";\nimport CardPage from \"./Pages/Cards/CardPage\";\n\nimport Video from './Pages/VideoPage/Video';\nimport ReadFiles from \"./Pages/ReadFiles\";\nimport LearnPage from './Pages/Pack/LearnPage';\nimport TestPage from \"./Pages/TestPage\";\n\n\n\nexport const PATH = {\n    LOGIN: '/login',\n    SIGNUP: '/signup',\n    PROFILE: '/profile',\n    NOTFOUND: '/404',\n    RESTORE_PASS: '/restore',\n    RESTORE_PASS_CHECK_EMAIL: '/check_email',\n    NEW_PASS: '/set-new-password',\n    PACK: '/pack',\n    CARDS: '/cards',\n    TEST_PAGE: '/test_page',\n    VIDEO_PAGE: '/video_page',\n    FILES: '/files',\n    VIDEO: '/video',\n    ALL_ROUTES : '*',\n    LEARN : '/learn',\n\n    READ_FILES: '/read_files',\n    WRITE_FILES: '/write_files',\n\n}\n\nconst  Routes : React.FC = ()  => {\n\n    console.log('Routes App' )\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PROFILE*/}\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\n\n                <Route path={PATH.LOGIN} exact render={() => <LoginPage/>}/>\n                <Route path={PATH.SIGNUP} exact render={() => <SignupPage/>}/>\n                <Route path={PATH.PROFILE} render={() => <ProfilePage/>}/>\n                <Route path={PATH.RESTORE_PASS} render={() => <RestorePassPage/>}/>\n                <Route path={PATH.RESTORE_PASS_CHECK_EMAIL} render={() => <RestorePassCheckEmailPage/>}/>\n                <Route path={PATH.VIDEO} render={() => <Video/>}/>\n                <Route path={PATH.NEW_PASS + '/:token'} component={NewPassPage}/>\n                {/*<Route path={PATH.DESTINATION_LIST_PAGE + '/:id'} exact={true} component={DestinationProfileContainer} />*/}\n                {/*<Route path={PATH.TEST_PAGE} render={() => <Loading message={\"Wait a minute please\"}/>}/>*/}\n                <Route path={PATH.TEST_PAGE} render={() => <TestPage/>}/>\n                <Route path={PATH.PACK} render={() => <Packs/>}/>\n                <Route path={PATH.CARDS + '/:packId'}  component={CardPage}/>\n                <Route path={PATH.LEARN + '/:packId'}  component={LearnPage}/>\n                <Route path={\"/NotFoundPage\"} render={() => <NotFoundPage/>}/>\n\n                <Route path={PATH.FILES} render={() => <ReadFiles/>}/>\n                <Route path={PATH.READ_FILES} exact render={() => <ReadFiles/>}/>\n\n\n                {/*<Redirect from={PATH.ALL_ROUTES} to={\"NotFoundPage\"}/>*/}\n                {/*<Route render={() => <LoginPage/>}/>*/}\n            </Switch>\n\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                {/*если бы не было path={PATH.ALL_ROUTES} render={() => */}\n\n\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {setAppErrorAC} from \"../../m2-bll/redux/app-reducer\";\n\nfunction Alert(props: AlertProps) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\n}\n\nexport function ErrorSnackbar() {\n\n    // const [open, setOpen] = React.useState(true)\n    const error = useSelector<AppStoreType, string | null >(state => state.app.error)\n   const dispatch = useDispatch()\n\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return\n        }\n      dispatch(setAppErrorAC(null))\n    }\n\n    const isOpen = error !== null;\n\n    return (\n        <Snackbar open={isOpen} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n                {error}\n            </Alert>\n        </Snackbar>\n    )\n}\n","import React from 'react'\nimport {NavLink, useHistory, useParams} from 'react-router-dom'\nimport s from './Header.module.css'\nimport {PATH} from \"../Routes\";\nimport {\n    AppBar,\n    Button, createStyles,\n    IconButton,\n    LinearProgress,\n    makeStyles,\n    Theme,\n    Toolbar,\n    Typography\n} from \"@material-ui/core\";\nimport {Menu} from \"@material-ui/icons\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        backgroundColor: \"#EBE0E9\",\n\n    },\n    listBlock : {\n        display : \"flex\",\n        flexDirection: \"row\"\n    },\n    iconBlock : {\n    },\n    menuItem: {\n        color: \"#2D2E46\",\n    }\n}))\n\nconst UnauthorizedHeader: React.FC = () => {\n    const {appStatus} = useSelector((state: AppStoreType) => state.app)\n    const history = useHistory()\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const isLoggedIn = useSelector<AppStoreType, boolean>((state) => state.auth.isLoggedIn)\n\n\n    return (\n        <div>\n            <AppBar\n                position=\"static\"\n                className={classes.root}\n            >\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        aria-label=\"menu\"\n                        className={classes.itemMenu}\n                    >\n                        <Menu/>\n                    </IconButton>\n                    <Typography variant=\"h1\">\n                        It-Incubator\n                    </Typography>\n                    <div>\n                            <Button\n                                color=\"inherit\"\n                                className={classes.menuItem}\n                                onClick={() => history.push(PATH.LOGIN)}\n                            >Login</Button>\n\n\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.SIGNUP)}\n                        >Sign up</Button>\n\n\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.RESTORE_PASS)}\n                        >Restore Pass</Button>\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.NEW_PASS)}\n                        >New Pass</Button>\n\n\n\n                       {/* -------------------------------------------------------------   */}\n\n                    </div>\n                    {/*<List\n                        component=\"nav\"\n                        aria-label=\"main mailbox folders\"\n                        className={classes.listBlock}\n                    >\n                        <ListItem button>\n                            <ListItemIcon className={classes.iconBlock}>\n                                <CardsIcon size={\"40\"}/>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Inbox\" />\n                        </ListItem>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <ProfileIcon size={\"25\"}/>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Drafts\" />\n                        </ListItem>\n                    </List>*/}\n                </Toolbar>\n                {appStatus === 'loading' && <LinearProgress color={\"secondary\"}/>}\n            </AppBar>\n            {/*<nav className={s.menu}>\n                <div className={s.content}>\n                    <NavLink\n                        to={PATH.LOGIN}\n                        className={s.item}\n                    >Login</NavLink>\n                    <NavLink\n                        to={PATH.SIGNUP}\n                        className={s.item}\n                    >Sign up</NavLink>\n                    <NavLink\n                        to={PATH.PROFILE}\n                        className={s.item}\n                    >Profile</NavLink>\n                    <NavLink\n                        to={PATH.RESTORE_PASS}\n                        className={s.item}\n                    >Restore Pass</NavLink>\n                    <NavLink\n                        to={PATH.NEW_PASS}\n                        className={s.item}\n                    >New Pass</NavLink>\n                    <NavLink\n                        to={PATH.TEST_PAGE}\n                        className={s.item}\n                    >Test Page</NavLink>\n                    <div className={s.item + ' ' + s.waffel}>menu</div>\n                </div>\n            </nav>*/}\n        </div>\n    )\n}\n\nexport default UnauthorizedHeader\n","import React from 'react'\nimport {NavLink, useHistory, useParams} from 'react-router-dom'\nimport s from './Header.module.css'\nimport {PATH} from \"../Routes\";\nimport {\n    AppBar,\n    Button, createStyles,\n    IconButton,\n    LinearProgress,\n    makeStyles,\n    Theme,\n    Toolbar,\n    Typography\n} from \"@material-ui/core\";\nimport {Menu} from \"@material-ui/icons\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\n\nimport { logoutTC } from '../../m2-bll/redux/auth-reducer';\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        backgroundColor: \"#EBE0E9\",\n\n    },\n    listBlock : {\n        display : \"flex\",\n        flexDirection: \"row\"\n    },\n    iconBlock : {\n    },\n    menuItem: {\n        color: \"#2D2E46\",\n    }\n}))\n\nconst Header: React.FC = () => {\n    const {appStatus} = useSelector((state: AppStoreType) => state.app)\n    const history = useHistory()\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const isLoggedIn = useSelector<AppStoreType, boolean>((state) => state.auth.isLoggedIn)\n\n\n    return (\n        <div>\n            <AppBar\n                position=\"static\"\n                className={classes.root}\n            >\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        aria-label=\"menu\"\n                        className={classes.itemMenu}\n                    >\n                        <Menu/>\n                    </IconButton>\n                    <Typography variant=\"h1\">\n                        It-Incubator\n                    </Typography>\n                    <div>\n                            <Button\n                                color=\"inherit\"\n                                className={classes.menuItem}\n                                onClick={() =>  dispatch(logoutTC())}\n                            >Log out</Button>\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.PROFILE)}\n                        >Profile</Button>\n\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.TEST_PAGE)}\n                        >Test Page</Button>\n\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.PACK)}\n                        >Packs</Button>\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.CARDS)}\n                        >Cards</Button>\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.VIDEO)}\n                        >Video</Button>\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.FILES)}\n                        >Files</Button>\n\n\n                    </div>\n                    {/*<List\n                        component=\"nav\"\n                        aria-label=\"main mailbox folders\"\n                        className={classes.listBlock}\n                    >\n                        <ListItem button>\n                            <ListItemIcon className={classes.iconBlock}>\n                                <CardsIcon size={\"40\"}/>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Inbox\" />\n                        </ListItem>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <ProfileIcon size={\"25\"}/>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Drafts\" />\n                        </ListItem>\n                    </List>*/}\n                </Toolbar>\n                {appStatus === 'loading' && <LinearProgress color={\"secondary\"}/>}\n            </AppBar>\n            {/*<nav className={s.menu}>\n                <div className={s.content}>\n                    <NavLink\n                        to={PATH.LOGIN}\n                        className={s.item}\n                    >Login</NavLink>\n                    <NavLink\n                        to={PATH.SIGNUP}\n                        className={s.item}\n                    >Sign up</NavLink>\n                    <NavLink\n                        to={PATH.PROFILE}\n                        className={s.item}\n                    >Profile</NavLink>\n                    <NavLink\n                        to={PATH.RESTORE_PASS}\n                        className={s.item}\n                    >Restore Pass</NavLink>\n                    <NavLink\n                        to={PATH.NEW_PASS}\n                        className={s.item}\n                    >New Pass</NavLink>\n                    <NavLink\n                        to={PATH.TEST_PAGE}\n                        className={s.item}\n                    >Test Page</NavLink>\n                    <div className={s.item + ' ' + s.waffel}>menu</div>\n                </div>\n            </nav>*/}\n        </div>\n    )\n}\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/Preloader.2187296e.gif\";","import React, {useEffect} from 'react';\nimport './App.css';\nimport Routes from './m1-ui/Routes';\nimport {ErrorSnackbar} from \"./m1-ui/ErrorSnackbar/ErrorSnackbar\";\nimport {authMeTC, setIsFetchingSignupAC, InitStateType} from \"./m2-bll/redux/auth-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"./m2-bll/redux/store\";\nimport UnauthorizedHeader from \"./m1-ui/Header/UnauthorizedHeader\";\nimport Header from \"./m1-ui/Header/Header\";\nimport preload from \"../n1-main/m1-ui/Img/Preloader.gif\"\n\n\nfunction App() {\n    const dispatch = useDispatch()\n    const userProfile = useSelector<AppStoreType, InitStateType>(state => state.auth)\n\n    useEffect(() => {\n        if (!userProfile.isLoggedIn) {\n            dispatch(authMeTC())\n        } else {dispatch(setIsFetchingSignupAC(false))}\n    }, [])\n\n\n  if (!userProfile.isLoggedIn) {\n      return (\n            userProfile.isFetching\n                ? <div><img src={preload} style={{width: 150, display: \"block\", margin: \"auto\" }}/></div>\n                : <> <UnauthorizedHeader/><Routes/></>\n      )\n  }\n  else {\n      return (\n          <div className=\"App\">\n              <ErrorSnackbar/>\n              <Header/>\n              <Routes/>\n          </div>\n      );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore, applyMiddleware} from \"redux\"\nimport thunkMiddleware from 'redux-thunk'\nimport {authReducer} from \"./auth-reducer\";\nimport {appReducer} from \"./app-reducer\";\nimport {packReducer} from \"./pack-reducer\";\nimport {cardReducer} from \"./card-reducer\";\n\n\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    app : appReducer,\n    pack : packReducer,\n    card : cardReducer,\n});\n\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware));\nexport default store\n\nexport type AppStoreType = ReturnType<typeof reducers>\n\n// @ts-ignore\n// window.store = store; // for dev\n","import {createTheme} from \"@material-ui/core\";\n\nexport const muiTheme = createTheme({\n    overrides: {\n        MuiCssBaseline: {\n            '@global': {\n                body: {\n                    background: 'linear-gradient(to bottom, #EBE0E9 30%, #9A91C8 90%)',\n                    backgroundRepeat: \"no-repeat\",\n                    backgroundAttachment: \"fixed\",\n                },\n            },\n        },\n\n        MuiButton: {\n            root: {\n                fontSize: '16px',\n                color: \"#21268F\",\n                fontFamily: 'SF UI Display, sans-serif',\n                fontWeight: 500,\n                fontStyle: \"normal\",\n                lineHeight: \"19px\",\n                borderRadius: \"30px\",\n                textTransform: \"none\",\n                padding: \"8px 16px\",\n            },\n        },\n        MuiCard: {\n            root: {\n                borderRadius : \"8px\",\n                backgroundColor : \"#F9F9FE\",\n            }\n        },\n        MuiLink: {\n            root : {\n                fontSize: '16px',\n                color: \"#21268F\",\n                fontFamily: 'SF UI Display, sans-serif',\n                fontWeight: 600,\n                fontStyle: \"normal\",\n                lineHeight: \"24px\",\n                borderRadius: \"30px\",\n            }\n        },\n        MuiTextField : {\n            root : {\n                fontWeight: 600,\n                fontFamily: 'SF UI Display, sans-serif',\n                fontStyle: \"normal\",\n                fontSize: \"16px\",\n                lineHeight: \"24px\",\n                color: \"#2D2E46\",\n            }\n        },\n        MuiInput : {\n            root : {\n                fontWeight: 300,\n                fontFamily: 'SF UI Display, sans-serif',\n                fontStyle: \"normal\",\n                fontSize: \"16px\",\n                lineHeight: \"24px\",\n                color: \"#2D2E46\",\n            }\n        }\n    },\n\n    typography: {\n        // Use the system font instead of the default Roboto font.\n        h1: {\n            fontWeight: 600,\n            fontStyle: \"normal\",\n            fontSize: \"26px\",\n            lineHeight: \"39px\",\n            fontFamily: \"Poppins\",\n            color: \"#2D2E46\",\n        },\n        h2: {\n            fontWeight: 600,\n            fontStyle: \"normal\",\n            fontSize: \"22px\",\n            lineHeight: \"33px\",\n            fontFamily: \"Poppins\",\n            color: \"#2D2E46\",\n        },\n        h3: {\n            fontWeight: 600,\n            fontStyle: \"normal\",\n            fontSize: \"16px\",\n            lineHeight: \"19px\",\n            fontFamily: 'SF UI Display, sans-serif',\n            color: \"#2D2E46\",\n        },\n        body1: {\n            fontWeight: 300,\n            fontStyle: \"normal\",\n            fontSize: \"16px\",\n            lineHeight: \"24px\",\n            fontFamily: 'SF UI Display, sans-serif',\n            color: \"#2D2E46\",\n            opacity: 0.6,\n        },\n        fontFamily: [\n            'Poppins',\n            'SF UI Display, sans-serif',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n        ].join(','),\n    },\n    palette: {\n        primary: {\n            light: '#b8f04a',\n            main: '#21268F',\n            dark: '#2D2E46'\n        },\n        secondary: {\n            light: '#e35ba2',\n            main: '#21268F',\n            dark: '#21268F'\n        },\n        error: {\n            main: '#ae2573',\n        },\n        warning: {\n            main: '#ffa500'\n        },\n        info: {\n            main: '#009cde',\n        },\n        text: {\n            primary: '#666666',\n            secondary: '#b3b3b3',\n        },\n    },\n\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from './n1-main/m2-bll/redux/store';\nimport {CssBaseline, MuiThemeProvider} from '@material-ui/core';\nimport {muiTheme} from \"./n1-main/m1-ui/common/theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <MuiThemeProvider theme={muiTheme}>\n          <CssBaseline/>\n          <Provider store={store}>\n              <HashRouter>\n              {/*<BrowserRouter>*/}\n                  <App />\n              {/*</BrowserRouter>*/}\n              </HashRouter>\n          </Provider>\n      </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"c\":\"styles_c__1ia9c\",\"back\":\"styles_back__3ZqUE\",\"front\":\"styles_front__WubdN\",\"container\":\"styles_container__1zVTW\"};"],"sourceRoot":""}